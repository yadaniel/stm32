ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART2_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART2_UART_Init:
  27              	.LFB939:
  28              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /**
   2:Core/Src/usart.c ****   ******************************************************************************
   3:Core/Src/usart.c ****   * @file    usart.c
   4:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/usart.c ****   *          of the USART instances.
   6:Core/Src/usart.c ****   ******************************************************************************
   7:Core/Src/usart.c ****   * @attention
   8:Core/Src/usart.c ****   *
   9:Core/Src/usart.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/usart.c ****   * All rights reserved.</center></h2>
  11:Core/Src/usart.c ****   *
  12:Core/Src/usart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/usart.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/usart.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/usart.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** 
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** /* USART2 init function */
  28:Core/Src/usart.c **** 
  29:Core/Src/usart.c **** void MX_USART2_UART_Init(void) {
  29              		.loc 1 29 32 view -0
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 2


  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 64
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40 0002 90B0     		sub	sp, sp, #64
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 80
  30:Core/Src/usart.c ****     LL_USART_InitTypeDef USART_InitStruct = {0};
  43              		.loc 1 30 5 view .LVU1
  44              		.loc 1 30 26 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0994     		str	r4, [sp, #36]
  47 0008 0A94     		str	r4, [sp, #40]
  48 000a 0B94     		str	r4, [sp, #44]
  49 000c 0C94     		str	r4, [sp, #48]
  50 000e 0D94     		str	r4, [sp, #52]
  51 0010 0E94     		str	r4, [sp, #56]
  52 0012 0F94     		str	r4, [sp, #60]
  31:Core/Src/usart.c **** 
  32:Core/Src/usart.c ****     LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
  53              		.loc 1 32 5 is_stmt 1 view .LVU3
  33:Core/Src/usart.c **** 
  34:Core/Src/usart.c ****     /* Peripheral clock enable */
  35:Core/Src/usart.c ****     LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_USART2);
  54              		.loc 1 35 5 view .LVU4
  55              	.LVL0:
  56              	.LBB10:
  57              	.LBI10:
  58              		.file 2 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @file    stm32l4xx_ll_bus.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****     [..]
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****     [..]
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   @endverbatim
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 3


  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @attention
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #ifndef STM32L4xx_LL_BUS_H
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define STM32L4xx_LL_BUS_H
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #include "stm32l4xx.h"
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @addtogroup STM32L4xx_LL_Driver
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHB1ENR_DMA1EN
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHB1ENR_DMA2EN
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(DMAMUX1)
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMAMUX1        RCC_AHB1ENR_DMAMUX1EN
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* DMAMUX1 */
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 4


  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHB1ENR_FLASHEN
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHB1ENR_CRCEN
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHB1ENR_TSCEN
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(DMA2D)
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2D          RCC_AHB1ENR_DMA2DEN
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* DMA2D */
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(GFXMMU)
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GFXMMU         RCC_AHB1ENR_GFXMMUEN
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* GFXMMU */
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM1          RCC_AHB1SMENR_SRAM1SMEN
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB2_GRP1_PERIPH  AHB2 GRP1 PERIPH
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOA          RCC_AHB2ENR_GPIOAEN
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOB          RCC_AHB2ENR_GPIOBEN
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOC          RCC_AHB2ENR_GPIOCEN
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(GPIOD)
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOD          RCC_AHB2ENR_GPIODEN
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /*GPIOD*/
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(GPIOE)
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOE          RCC_AHB2ENR_GPIOEEN
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /*GPIOE*/
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(GPIOF)
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOF          RCC_AHB2ENR_GPIOFEN
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* GPIOF */
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(GPIOG)
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOG          RCC_AHB2ENR_GPIOGEN
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* GPIOG */
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOH          RCC_AHB2ENR_GPIOHEN
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(GPIOI)
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOI          RCC_AHB2ENR_GPIOIEN
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* GPIOI */
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(USB_OTG_FS)
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_OTGFS          RCC_AHB2ENR_OTGFSEN
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* USB_OTG_FS */
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ADC            RCC_AHB2ENR_ADCEN
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(DCMI)
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_DCMI           RCC_AHB2ENR_DCMIEN
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* DCMI */
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(AES)
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_AES            RCC_AHB2ENR_AESEN
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* AES */
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(HASH)
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_HASH           RCC_AHB2ENR_HASHEN
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* HASH */
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_RNG            RCC_AHB2ENR_RNGEN
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(OCTOSPIM)
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_OSPIM          RCC_AHB2ENR_OSPIMEN
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* OCTOSPIM */
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(PKA)
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_PKA            RCC_AHB2ENR_PKAEN
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* PKA */
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 5


 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(SDMMC1) && defined(RCC_AHB2ENR_SDMMC1EN)
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_SDMMC1         RCC_AHB2ENR_SDMMC1EN
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* SDMMC1 && RCC_AHB2ENR_SDMMC1EN */
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_SRAM2          RCC_AHB2SMENR_SRAM2SMEN
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(SRAM3_BASE)
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_SRAM3          RCC_AHB2SMENR_SRAM3SMEN
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* SRAM3_BASE */
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB3_GRP1_PERIPH  AHB3 GRP1 PERIPH
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_ALL            0xFFFFFFFFU
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(FMC_Bank1_R)
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_FMC            RCC_AHB3ENR_FMCEN
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* FMC_Bank1_R */
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(QUADSPI)
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_QSPI           RCC_AHB3ENR_QSPIEN
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* QUADSPI */
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(OCTOSPI1)
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_OSPI1          RCC_AHB3ENR_OSPI1EN
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* OCTOSPI1 */
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(OCTOSPI2)
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_OSPI2          RCC_AHB3ENR_OSPI2EN
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* OCTOSPI2 */
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR1_TIM2EN
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(TIM3)
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR1_TIM3EN
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* TIM3 */
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(TIM4)
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM4           RCC_APB1ENR1_TIM4EN
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* TIM4 */
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(TIM5)
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM5           RCC_APB1ENR1_TIM5EN
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* TIM5 */
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR1_TIM6EN
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR1_TIM7EN
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(LCD)
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LCD            RCC_APB1ENR1_LCDEN
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* LCD */
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(RCC_APB1ENR1_RTCAPBEN)
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTCAPB         RCC_APB1ENR1_RTCAPBEN
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* RCC_APB1ENR1_RTCAPBEN */
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR1_WWDGEN
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(SPI2)
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR1_SPI2EN
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* SPI2 */
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 6


 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI3           RCC_APB1ENR1_SPI3EN
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR1_USART2EN
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(USART3)
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR1_USART3EN
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* USART3 */
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(UART4)
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART4          RCC_APB1ENR1_UART4EN
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* UART4 */
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(UART5)
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART5          RCC_APB1ENR1_UART5EN
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* UART5 */
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR1_I2C1EN
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(I2C2)
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR1_I2C2EN
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* I2C2 */
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR1_I2C3EN
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(CRS)
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR1_CRSEN
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* CRS */
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN1           RCC_APB1ENR1_CAN1EN
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(CAN2)
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN2           RCC_APB1ENR1_CAN2EN
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* CAN2 */
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(USB)
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR1_USBFSEN
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* USB */
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR1_PWREN
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR1_DAC1EN
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_OPAMP          RCC_APB1ENR1_OPAMPEN
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR1_LPTIM1EN
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            0xFFFFFFFFU
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPUART1        RCC_APB1ENR2_LPUART1EN
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(I2C4)
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_I2C4           RCC_APB1ENR2_I2C4EN
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* I2C4 */
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(SWPMI1)
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SWPMI1         RCC_APB1ENR2_SWPMI1EN
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* SWPMI1 */
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM2         RCC_APB1ENR2_LPTIM2EN
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_FW             RCC_APB2ENR_FWEN
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 7


 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(SDMMC1) && defined(RCC_APB2ENR_SDMMC1EN)
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SDMMC1         RCC_APB2ENR_SDMMC1EN
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* SDMMC1 && RCC_APB2ENR_SDMMC1EN */
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(TIM8)
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM8           RCC_APB2ENR_TIM8EN
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* TIM8 */
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(TIM17)
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* TIM17 */
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SAI1           RCC_APB2ENR_SAI1EN
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(SAI2)
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SAI2           RCC_APB2ENR_SAI2EN
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* SAI2 */
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(DFSDM1_Channel0)
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DFSDM1         RCC_APB2ENR_DFSDM1EN
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* DFSDM1_Channel0 */
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(LTDC)
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_LTDC           RCC_APB2ENR_LTDCEN
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* LTDC */
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(DSI)
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DSI            RCC_APB2ENR_DSIEN
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* DSI */
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** Legacy definitions for compatibility purpose
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** @cond 0
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(DFSDM1_Channel0)
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DFSDM          LL_APB2_GRP1_PERIPH_DFSDM1
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* DFSDM1_Channel0 */
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** @endcond
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 8


 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_EnableClock\n
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_EnableClock\n
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_EnableClock\n
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      FLASHEN       LL_AHB1_GRP1_EnableClock\n
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_EnableClock\n
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      TSCEN         LL_AHB1_GRP1_EnableClock\n
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN       LL_AHB1_GRP1_EnableClock\n
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      GFXMMUEN      LL_AHB1_GRP1_EnableClock
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_IsEnabledClock\n
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      FLASHEN       LL_AHB1_GRP1_IsEnabledClock\n
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      TSCEN         LL_AHB1_GRP1_IsEnabledClock\n
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN       LL_AHB1_GRP1_IsEnabledClock\n
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      GFXMMUEN      LL_AHB1_GRP1_IsEnabledClock
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1ENR, Periphs) == Periphs) ? 1UL : 0UL);
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 9


 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_DisableClock\n
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_DisableClock\n
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_DisableClock\n
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      FLASHEN       LL_AHB1_GRP1_DisableClock\n
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_DisableClock\n
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      TSCEN         LL_AHB1_GRP1_DisableClock\n
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN       LL_AHB1_GRP1_DisableClock\n
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      GFXMMUEN      LL_AHB1_GRP1_DisableClock
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1ENR, Periphs);
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ForceReset\n
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ForceReset\n
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST     LL_AHB1_GRP1_ForceReset\n
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     FLASHRST      LL_AHB1_GRP1_ForceReset\n
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ForceReset\n
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     TSCRST        LL_AHB1_GRP1_ForceReset\n
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMA2DRST      LL_AHB1_GRP1_ForceReset\n
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     GFXMMURST     LL_AHB1_GRP1_ForceReset
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB1RSTR, Periphs);
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 10


 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ReleaseReset\n
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST     LL_AHB1_GRP1_ReleaseReset\n
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     FLASHRST      LL_AHB1_GRP1_ReleaseReset\n
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     TSCRST        LL_AHB1_GRP1_ReleaseReset\n
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMA2DRST      LL_AHB1_GRP1_ReleaseReset\n
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     GFXMMURST     LL_AHB1_GRP1_ReleaseReset
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1RSTR, Periphs);
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB1 peripheral clocks in Sleep and Stop modes
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_EnableClockStopSleep\n
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    FLASHSMEN     LL_AHB1_GRP1_EnableClockStopSleep\n
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    SRAM1SMEN     LL_AHB1_GRP1_EnableClockStopSleep\n
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_EnableClockStopSleep\n
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    TSCSMEN       LL_AHB1_GRP1_EnableClockStopSleep\n
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    DMA2DSMEN     LL_AHB1_GRP1_EnableClockStopSleep\n
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    GFXMMUSMEN    LL_AHB1_GRP1_EnableClockStopSleep
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM1
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockStopSleep(uint32_t Periphs)
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 11


 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB1SMENR, Periphs);
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1SMENR, Periphs);
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB1 peripheral clocks in Sleep and Stop modes
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_DisableClockStopSleep\n
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    FLASHSMEN     LL_AHB1_GRP1_DisableClockStopSleep\n
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    SRAM1SMEN     LL_AHB1_GRP1_DisableClockStopSleep\n
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_DisableClockStopSleep\n
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    TSCSMEN       LL_AHB1_GRP1_DisableClockStopSleep\n
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    DMA2DSMEN     LL_AHB1_GRP1_DisableClockStopSleep\n
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    GFXMMUSMEN    LL_AHB1_GRP1_DisableClockStopSleep
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM1
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockStopSleep(uint32_t Periphs)
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1SMENR, Periphs);
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB2 AHB2
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock.
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_EnableClock\n
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_EnableClock\n
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_EnableClock\n
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIODEN       LL_AHB2_GRP1_EnableClock\n
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOEEN       LL_AHB2_GRP1_EnableClock\n
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOFEN       LL_AHB2_GRP1_EnableClock\n
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOGEN       LL_AHB2_GRP1_EnableClock\n
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_EnableClock\n
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOIEN       LL_AHB2_GRP1_EnableClock\n
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      OTGFSEN       LL_AHB2_GRP1_EnableClock\n
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 12


 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      ADCEN         LL_AHB2_GRP1_EnableClock\n
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      DCMIEN        LL_AHB2_GRP1_EnableClock\n
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      AESEN         LL_AHB2_GRP1_EnableClock\n
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      HASHEN        LL_AHB2_GRP1_EnableClock\n
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      RNGEN         LL_AHB2_GRP1_EnableClock\n
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      OSPIMEN       LL_AHB2_GRP1_EnableClock\n
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      SDMMC1EN      LL_AHB2_GRP1_EnableClock
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Check if AHB2 peripheral clock is enabled or not
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_IsEnabledClock\n
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_IsEnabledClock\n
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_IsEnabledClock\n
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIODEN       LL_AHB2_GRP1_IsEnabledClock\n
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOEEN       LL_AHB2_GRP1_IsEnabledClock\n
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOFEN       LL_AHB2_GRP1_IsEnabledClock\n
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOGEN       LL_AHB2_GRP1_IsEnabledClock\n
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_IsEnabledClock\n
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOIEN       LL_AHB2_GRP1_IsEnabledClock\n
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      OTGFSEN       LL_AHB2_GRP1_IsEnabledClock\n
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      ADCEN         LL_AHB2_GRP1_IsEnabledClock\n
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      DCMIEN        LL_AHB2_GRP1_IsEnabledClock\n
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      AESEN         LL_AHB2_GRP1_IsEnabledClock\n
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      HASHEN        LL_AHB2_GRP1_IsEnabledClock\n
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      RNGEN         LL_AHB2_GRP1_IsEnabledClock\n
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      OSPIMEN       LL_AHB2_GRP1_IsEnabledClock\n
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      SDMMC1EN      LL_AHB2_GRP1_IsEnabledClock
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 13


 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB2_GRP1_IsEnabledClock(uint32_t Periphs)
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   return ((READ_BIT(RCC->AHB2ENR, Periphs) == Periphs) ? 1UL : 0UL);
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB2 peripherals clock.
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_DisableClock\n
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_DisableClock\n
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_DisableClock\n
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIODEN       LL_AHB2_GRP1_DisableClock\n
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOEEN       LL_AHB2_GRP1_DisableClock\n
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOFEN       LL_AHB2_GRP1_DisableClock\n
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOGEN       LL_AHB2_GRP1_DisableClock\n
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_DisableClock\n
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOIEN       LL_AHB2_GRP1_DisableClock\n
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      OTGFSEN       LL_AHB2_GRP1_DisableClock\n
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      ADCEN         LL_AHB2_GRP1_DisableClock\n
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      DCMIEN        LL_AHB2_GRP1_DisableClock\n
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      AESEN         LL_AHB2_GRP1_DisableClock\n
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      HASHEN        LL_AHB2_GRP1_DisableClock\n
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      RNGEN         LL_AHB2_GRP1_DisableClock\n
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      OSPIMEN       LL_AHB2_GRP1_DisableClock\n
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      SDMMC1EN      LL_AHB2_GRP1_DisableClock
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 14


 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClock(uint32_t Periphs)
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2ENR, Periphs);
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Force AHB2 peripherals reset.
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2RSTR     GPIOARST      LL_AHB2_GRP1_ForceReset\n
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOBRST      LL_AHB2_GRP1_ForceReset\n
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOCRST      LL_AHB2_GRP1_ForceReset\n
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIODRST      LL_AHB2_GRP1_ForceReset\n
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOERST      LL_AHB2_GRP1_ForceReset\n
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOFRST      LL_AHB2_GRP1_ForceReset\n
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOGRST      LL_AHB2_GRP1_ForceReset\n
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOHRST      LL_AHB2_GRP1_ForceReset\n
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOIRST      LL_AHB2_GRP1_ForceReset\n
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     OTGFSRST      LL_AHB2_GRP1_ForceReset\n
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     ADCRST        LL_AHB2_GRP1_ForceReset\n
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     DCMIRST       LL_AHB2_GRP1_ForceReset\n
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     AESRST        LL_AHB2_GRP1_ForceReset\n
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     HASHRST       LL_AHB2_GRP1_ForceReset\n
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     RNGRST        LL_AHB2_GRP1_ForceReset\n
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     OSPIMRST      LL_AHB2_GRP1_ForceReset\n
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     SDMMC1RST     LL_AHB2_GRP1_ForceReset
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 15


 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ForceReset(uint32_t Periphs)
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB2RSTR, Periphs);
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Release AHB2 peripherals reset.
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2RSTR     GPIOARST      LL_AHB2_GRP1_ReleaseReset\n
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOBRST      LL_AHB2_GRP1_ReleaseReset\n
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOCRST      LL_AHB2_GRP1_ReleaseReset\n
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIODRST      LL_AHB2_GRP1_ReleaseReset\n
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOERST      LL_AHB2_GRP1_ReleaseReset\n
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOFRST      LL_AHB2_GRP1_ReleaseReset\n
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOGRST      LL_AHB2_GRP1_ReleaseReset\n
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOHRST      LL_AHB2_GRP1_ReleaseReset\n
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOIRST      LL_AHB2_GRP1_ReleaseReset\n
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     OTGFSRST      LL_AHB2_GRP1_ReleaseReset\n
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     ADCRST        LL_AHB2_GRP1_ReleaseReset\n
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     DCMIRST       LL_AHB2_GRP1_ReleaseReset\n
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     AESRST        LL_AHB2_GRP1_ReleaseReset\n
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     HASHRST       LL_AHB2_GRP1_ReleaseReset\n
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     RNGRST        LL_AHB2_GRP1_ReleaseReset\n
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     OSPIMRST      LL_AHB2_GRP1_ReleaseReset\n
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     SDMMC1RST     LL_AHB2_GRP1_ReleaseReset
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ReleaseReset(uint32_t Periphs)
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2RSTR, Periphs);
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB2 peripheral clocks in Sleep and Stop modes
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 16


 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIODSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOESMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOFSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOGSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOISMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    SRAM2SMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    SRAM3SMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    OTGFSSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    ADCSMEN       LL_AHB2_GRP1_EnableClockStopSleep\n
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    DCMISMEN      LL_AHB2_GRP1_EnableClockStopSleep\n
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    AESSMEN       LL_AHB2_GRP1_EnableClockStopSleep\n
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    HASHSMEN      LL_AHB2_GRP1_EnableClockStopSleep\n
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    RNGSMEN       LL_AHB2_GRP1_EnableClockStopSleep\n
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    OSPIMSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    SDMMC1SMEN    LL_AHB2_GRP1_EnableClockStopSleep
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SRAM2
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SRAM3 (*)
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClockStopSleep(uint32_t Periphs)
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB2SMENR, Periphs);
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2SMENR, Periphs);
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB2 peripheral clocks in Sleep and Stop modes
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIODSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOESMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 17


 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOFSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOGSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOISMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    SRAM2SMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    SRAM3SMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    OTGFSSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    ADCSMEN       LL_AHB2_GRP1_DisableClockStopSleep\n
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    DCMISMEN      LL_AHB2_GRP1_DisableClockStopSleep\n
 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    AESSMEN       LL_AHB2_GRP1_DisableClockStopSleep\n
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    HASHSMEN      LL_AHB2_GRP1_DisableClockStopSleep\n
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    RNGSMEN       LL_AHB2_GRP1_DisableClockStopSleep\n
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    OSPIMSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    SDMMC1SMEN    LL_AHB2_GRP1_DisableClockStopSleep
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SRAM2
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SRAM3 (*)
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClockStopSleep(uint32_t Periphs)
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2SMENR, Periphs);
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB3 AHB3
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock.
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_EnableClock\n
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_EnableClock\n
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      OSPI1EN       LL_AHB3_GRP1_EnableClock\n
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      OSPI2EN       LL_AHB3_GRP1_EnableClock
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 18


 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClock(uint32_t Periphs)
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB3ENR, Periphs);
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled or not
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_IsEnabledClock\n
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_IsEnabledClock\n
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      OSPI1EN       LL_AHB3_GRP1_IsEnabledClock\n
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      OSPI2EN       LL_AHB3_GRP1_IsEnabledClock
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB3_GRP1_IsEnabledClock(uint32_t Periphs)
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   return ((READ_BIT(RCC->AHB3ENR, Periphs) == Periphs) ? 1UL : 0UL);
 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock.
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_DisableClock\n
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_DisableClock\n
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      OSPI1EN       LL_AHB3_GRP1_DisableClock\n
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      OSPI2EN       LL_AHB3_GRP1_DisableClock
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClock(uint32_t Periphs)
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3ENR, Periphs);
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 19


 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Force AHB3 peripherals reset.
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3RSTR     FMCRST        LL_AHB3_GRP1_ForceReset\n
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3RSTR     QSPIRST       LL_AHB3_GRP1_ForceReset\n
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3RSTR     OSPI1RST      LL_AHB3_GRP1_ForceReset\n
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3RSTR     OSPI2RST      LL_AHB3_GRP1_ForceReset
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ForceReset(uint32_t Periphs)
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB3RSTR, Periphs);
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Release AHB3 peripherals reset.
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3RSTR     FMCRST        LL_AHB3_GRP1_ReleaseReset\n
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3RSTR     QSPIRST       LL_AHB3_GRP1_ReleaseReset\n
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3RSTR     OSPI1RST      LL_AHB3_GRP1_ReleaseReset\n
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3RSTR     OSPI2RST      LL_AHB3_GRP1_ReleaseReset
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ReleaseReset(uint32_t Periphs)
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3RSTR, Periphs);
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB3 peripheral clocks in Sleep and Stop modes
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3SMENR    FMCSMEN       LL_AHB3_GRP1_EnableClockStopSleep\n
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3SMENR    QSPISMEN      LL_AHB3_GRP1_EnableClockStopSleep\n
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3SMENR    OSPI1SMEN     LL_AHB3_GRP1_EnableClockStopSleep\n
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3SMENR    OSPI2SMEN     LL_AHB3_GRP1_EnableClockStopSleep
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
 989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 20


 992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClockStopSleep(uint32_t Periphs)
 994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB3SMENR, Periphs);
 997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3SMENR, Periphs);
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
1000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB3 peripheral clocks in Sleep and Stop modes
1004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3SMENR    FMCSMEN       LL_AHB3_GRP1_DisableClockStopSleep\n
1005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3SMENR    QSPISMEN      LL_AHB3_GRP1_DisableClockStopSleep\n
1006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3SMENR    OSPI1SMEN     LL_AHB3_GRP1_DisableClockStopSleep\n
1007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3SMENR    OSPI2SMEN     LL_AHB3_GRP1_DisableClockStopSleep\n
1008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
1010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
1011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
1012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
1013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClockStopSleep(uint32_t Periphs)
1018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3SMENR, Periphs);
1020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
1024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
1025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
1027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
1028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
1029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
1032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_EnableClock\n
1033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM3EN        LL_APB1_GRP1_EnableClock\n
1034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM4EN        LL_APB1_GRP1_EnableClock\n
1035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM5EN        LL_APB1_GRP1_EnableClock\n
1036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM6EN        LL_APB1_GRP1_EnableClock\n
1037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM7EN        LL_APB1_GRP1_EnableClock\n
1038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     LCDEN         LL_APB1_GRP1_EnableClock\n
1039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_EnableClock\n
1040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     WWDGEN        LL_APB1_GRP1_EnableClock\n
1041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_EnableClock\n
1042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     SPI3EN        LL_APB1_GRP1_EnableClock\n
1043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_EnableClock\n
1044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     USART3EN      LL_APB1_GRP1_EnableClock\n
1045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     UART4EN       LL_APB1_GRP1_EnableClock\n
1046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     UART5EN       LL_APB1_GRP1_EnableClock\n
1047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_EnableClock\n
1048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_EnableClock\n
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 21


1049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_EnableClock\n
1050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     CRSEN         LL_APB1_GRP1_EnableClock\n
1051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     CAN1EN        LL_APB1_GRP1_EnableClock\n
1052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     USBFSEN       LL_APB1_GRP1_EnableClock\n
1053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     CAN2EN        LL_APB1_GRP1_EnableClock\n
1054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     PWREN         LL_APB1_GRP1_EnableClock\n
1055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     DAC1EN        LL_APB1_GRP1_EnableClock\n
1056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     OPAMPEN       LL_APB1_GRP1_EnableClock\n
1057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_EnableClock
1058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
1061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
1062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
1066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
1069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
1072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
1073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
1076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
1078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
1081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
  59              		.loc 2 1089 22 view .LVU5
  60              	.LBB11:
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
  61              		.loc 2 1091 3 view .LVU6
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR1, Periphs);
  62              		.loc 2 1092 3 view .LVU7
  63 0014 254B     		ldr	r3, .L3
  64 0016 9A6D     		ldr	r2, [r3, #88]
  65 0018 42F40032 		orr	r2, r2, #131072
  66 001c 9A65     		str	r2, [r3, #88]
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
  67              		.loc 2 1094 3 view .LVU8
  68              		.loc 2 1094 12 is_stmt 0 view .LVU9
  69 001e 9A6D     		ldr	r2, [r3, #88]
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 22


  70 0020 02F40032 		and	r2, r2, #131072
  71              		.loc 2 1094 10 view .LVU10
  72 0024 0292     		str	r2, [sp, #8]
1095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
  73              		.loc 2 1095 3 is_stmt 1 view .LVU11
  74 0026 029A     		ldr	r2, [sp, #8]
  75              	.LVL1:
  76              		.loc 2 1095 3 is_stmt 0 view .LVU12
  77              	.LBE11:
  78              	.LBE10:
  36:Core/Src/usart.c **** 
  37:Core/Src/usart.c ****     LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
  79              		.loc 1 37 5 is_stmt 1 view .LVU13
  80              	.LBB12:
  81              	.LBI12:
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
  82              		.loc 2 565 22 view .LVU14
  83              	.LBB13:
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
  84              		.loc 2 567 3 view .LVU15
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
  85              		.loc 2 568 3 view .LVU16
  86 0028 DA6C     		ldr	r2, [r3, #76]
  87 002a 42F00102 		orr	r2, r2, #1
  88 002e DA64     		str	r2, [r3, #76]
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
  89              		.loc 2 570 3 view .LVU17
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
  90              		.loc 2 570 12 is_stmt 0 view .LVU18
  91 0030 DB6C     		ldr	r3, [r3, #76]
  92 0032 03F00103 		and	r3, r3, #1
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
  93              		.loc 2 570 10 view .LVU19
  94 0036 0193     		str	r3, [sp, #4]
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
  95              		.loc 2 571 3 is_stmt 1 view .LVU20
  96 0038 019B     		ldr	r3, [sp, #4]
  97              	.LVL2:
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
  98              		.loc 2 571 3 is_stmt 0 view .LVU21
  99              	.LBE13:
 100              	.LBE12:
  38:Core/Src/usart.c ****     /**USART2 GPIO Configuration
  39:Core/Src/usart.c ****     PA2   ------> USART2_TX
  40:Core/Src/usart.c ****     PA15 (JTDI)   ------> USART2_RX
  41:Core/Src/usart.c ****     */
  42:Core/Src/usart.c ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_2;
 101              		.loc 1 42 5 is_stmt 1 view .LVU22
 102              		.loc 1 42 25 is_stmt 0 view .LVU23
 103 003a 0423     		movs	r3, #4
 104 003c 0393     		str	r3, [sp, #12]
  43:Core/Src/usart.c ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 105              		.loc 1 43 5 is_stmt 1 view .LVU24
 106              		.loc 1 43 26 is_stmt 0 view .LVU25
 107 003e 0226     		movs	r6, #2
 108 0040 0496     		str	r6, [sp, #16]
  44:Core/Src/usart.c ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 23


 109              		.loc 1 44 5 is_stmt 1 view .LVU26
 110              		.loc 1 44 27 is_stmt 0 view .LVU27
 111 0042 0325     		movs	r5, #3
 112 0044 0595     		str	r5, [sp, #20]
  45:Core/Src/usart.c ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 113              		.loc 1 45 5 is_stmt 1 view .LVU28
 114              		.loc 1 45 32 is_stmt 0 view .LVU29
 115 0046 0694     		str	r4, [sp, #24]
  46:Core/Src/usart.c ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 116              		.loc 1 46 5 is_stmt 1 view .LVU30
 117              		.loc 1 46 26 is_stmt 0 view .LVU31
 118 0048 0794     		str	r4, [sp, #28]
  47:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_7;
 119              		.loc 1 47 5 is_stmt 1 view .LVU32
 120              		.loc 1 47 31 is_stmt 0 view .LVU33
 121 004a 0723     		movs	r3, #7
 122 004c 0893     		str	r3, [sp, #32]
  48:Core/Src/usart.c ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 123              		.loc 1 48 5 is_stmt 1 view .LVU34
 124 004e 03A9     		add	r1, sp, #12
 125 0050 4FF09040 		mov	r0, #1207959552
 126 0054 FFF7FEFF 		bl	LL_GPIO_Init
 127              	.LVL3:
  49:Core/Src/usart.c **** 
  50:Core/Src/usart.c ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_15;
 128              		.loc 1 50 5 view .LVU35
 129              		.loc 1 50 25 is_stmt 0 view .LVU36
 130 0058 4FF40043 		mov	r3, #32768
 131 005c 0393     		str	r3, [sp, #12]
  51:Core/Src/usart.c ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 132              		.loc 1 51 5 is_stmt 1 view .LVU37
 133              		.loc 1 51 26 is_stmt 0 view .LVU38
 134 005e 0496     		str	r6, [sp, #16]
  52:Core/Src/usart.c ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 135              		.loc 1 52 5 is_stmt 1 view .LVU39
 136              		.loc 1 52 27 is_stmt 0 view .LVU40
 137 0060 0595     		str	r5, [sp, #20]
  53:Core/Src/usart.c ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 138              		.loc 1 53 5 is_stmt 1 view .LVU41
 139              		.loc 1 53 32 is_stmt 0 view .LVU42
 140 0062 0694     		str	r4, [sp, #24]
  54:Core/Src/usart.c ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 141              		.loc 1 54 5 is_stmt 1 view .LVU43
 142              		.loc 1 54 26 is_stmt 0 view .LVU44
 143 0064 0794     		str	r4, [sp, #28]
  55:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_3;
 144              		.loc 1 55 5 is_stmt 1 view .LVU45
 145              		.loc 1 55 31 is_stmt 0 view .LVU46
 146 0066 0895     		str	r5, [sp, #32]
  56:Core/Src/usart.c ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 147              		.loc 1 56 5 is_stmt 1 view .LVU47
 148 0068 03A9     		add	r1, sp, #12
 149 006a 4FF09040 		mov	r0, #1207959552
 150 006e FFF7FEFF 		bl	LL_GPIO_Init
 151              	.LVL4:
  57:Core/Src/usart.c **** 
  58:Core/Src/usart.c ****     USART_InitStruct.BaudRate = 115200;
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 24


 152              		.loc 1 58 5 view .LVU48
 153              		.loc 1 58 31 is_stmt 0 view .LVU49
 154 0072 4FF4E133 		mov	r3, #115200
 155 0076 0993     		str	r3, [sp, #36]
  59:Core/Src/usart.c ****     USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 156              		.loc 1 59 5 is_stmt 1 view .LVU50
 157              		.loc 1 59 32 is_stmt 0 view .LVU51
 158 0078 0A94     		str	r4, [sp, #40]
  60:Core/Src/usart.c ****     USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 159              		.loc 1 60 5 is_stmt 1 view .LVU52
 160              		.loc 1 60 31 is_stmt 0 view .LVU53
 161 007a 0B94     		str	r4, [sp, #44]
  61:Core/Src/usart.c ****     USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 162              		.loc 1 61 5 is_stmt 1 view .LVU54
 163              		.loc 1 61 29 is_stmt 0 view .LVU55
 164 007c 0C94     		str	r4, [sp, #48]
  62:Core/Src/usart.c ****     USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 165              		.loc 1 62 5 is_stmt 1 view .LVU56
 166              		.loc 1 62 40 is_stmt 0 view .LVU57
 167 007e 0C23     		movs	r3, #12
 168 0080 0D93     		str	r3, [sp, #52]
  63:Core/Src/usart.c ****     USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 169              		.loc 1 63 5 is_stmt 1 view .LVU58
 170              		.loc 1 63 42 is_stmt 0 view .LVU59
 171 0082 0E94     		str	r4, [sp, #56]
  64:Core/Src/usart.c ****     USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 172              		.loc 1 64 5 is_stmt 1 view .LVU60
 173              		.loc 1 64 35 is_stmt 0 view .LVU61
 174 0084 0F94     		str	r4, [sp, #60]
  65:Core/Src/usart.c ****     LL_USART_Init(USART2, &USART_InitStruct);
 175              		.loc 1 65 5 is_stmt 1 view .LVU62
 176 0086 0A4C     		ldr	r4, .L3+4
 177 0088 09A9     		add	r1, sp, #36
 178 008a 2046     		mov	r0, r4
 179 008c FFF7FEFF 		bl	LL_USART_Init
 180              	.LVL5:
  66:Core/Src/usart.c ****     LL_USART_ConfigAsyncMode(USART2);
 181              		.loc 1 66 5 view .LVU63
 182              	.LBB14:
 183              	.LBI14:
 184              		.file 3 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @file    stm32l4xx_ll_usart.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 25


  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ******************************************************************************
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #ifndef STM32L4xx_LL_USART_H
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define STM32L4xx_LL_USART_H
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #ifdef __cplusplus
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** extern "C" {
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #include "stm32l4xx.h"
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @addtogroup STM32L4xx_LL_Driver
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (UART4) || defined (UART5)
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL USART
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Private_Variables USART Private Variables
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Array used to get the USART prescaler division decimal values versus @ref USART_LL_EC_PRESCALER 
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** static const uint32_t USART_PRESCALER_TAB[] =
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   1UL,
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   2UL,
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   4UL,
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   6UL,
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   8UL,
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   10UL,
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   12UL,
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   16UL,
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   32UL,
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   64UL,
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   128UL,
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   256UL
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** };
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 26


  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** typedef struct
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t PrescalerValue;            /*!< Specifies the Prescaler to compute the communication bau
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PRESCA
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 27


 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** } LL_USART_InitTypeDef;
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** typedef struct
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLEAR_FLAG Clear Flags Defines
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_WriteReg function
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_PECF                       USART_ICR_PECF                /*!< Parity error fla
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_FECF                       USART_ICR_FECF                /*!< Framing error fl
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_NECF                       USART_ICR_NECF                /*!< Noise error dete
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_ORECF                      USART_ICR_ORECF               /*!< Overrun error fl
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_IDLECF                     USART_ICR_IDLECF              /*!< Idle line detect
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_TXFECF                     USART_ICR_TXFECF              /*!< TX FIFO Empty Cl
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 28


 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_TCCF                       USART_ICR_TCCF                /*!< Transmission com
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_TCBGTCF                    USART_ICR_TCBGTCF             /*!< Transmission com
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_LBDCF                      USART_ICR_LBDCF               /*!< LIN break detect
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_CTSCF                      USART_ICR_CTSCF               /*!< CTS flag */
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_RTOCF                      USART_ICR_RTOCF               /*!< Receiver timeout
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_EOBCF                      USART_ICR_EOBCF               /*!< End of block fla
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_UDRCF                      USART_ICR_UDRCF               /*!< SPI Slave Underr
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_CMCF                       USART_ICR_CMCF                /*!< Character match 
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_WUCF                       USART_ICR_WUCF                /*!< Wakeup from Stop
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_PE                         USART_ISR_PE                  /*!< Parity error fla
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_FE                         USART_ISR_FE                  /*!< Framing error fl
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_NE                         USART_ISR_NE                  /*!< Noise detected f
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_ORE                        USART_ISR_ORE                 /*!< Overrun error fl
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_IDLE                       USART_ISR_IDLE                /*!< Idle line detect
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RXNE_RXFNE                 USART_ISR_RXNE_RXFNE          /*!< Read data regist
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RXNE                       USART_ISR_RXNE                /*!< Read data regist
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TC                         USART_ISR_TC                  /*!< Transmission com
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TXE_TXFNF                  USART_ISR_TXE_TXFNF           /*!< Transmit data re
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TXE                        USART_ISR_TXE                 /*!< Transmit data re
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_LBDF                       USART_ISR_LBDF                /*!< LIN break detect
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_CTSIF                      USART_ISR_CTSIF               /*!< CTS interrupt fl
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_CTS                        USART_ISR_CTS                 /*!< CTS flag */
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RTOF                       USART_ISR_RTOF                /*!< Receiver timeout
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_EOBF                       USART_ISR_EOBF                /*!< End of block fla
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_UDR                        USART_ISR_UDR                 /*!< SPI Slave underr
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_ABRE                       USART_ISR_ABRE                /*!< Auto baud rate e
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_ABRF                       USART_ISR_ABRF                /*!< Auto baud rate f
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_BUSY                       USART_ISR_BUSY                /*!< Busy flag */
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_CMF                        USART_ISR_CMF                 /*!< Character match 
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_SBKF                       USART_ISR_SBKF                /*!< Send break flag 
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RWU                        USART_ISR_RWU                 /*!< Receiver wakeup 
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_WUF                        USART_ISR_WUF                 /*!< Wakeup from Stop
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TEACK                      USART_ISR_TEACK               /*!< Transmit enable 
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_REACK                      USART_ISR_REACK               /*!< Receive enable a
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TXFE                       USART_ISR_TXFE                /*!< TX FIFO empty fl
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RXFF                       USART_ISR_RXFF                /*!< RX FIFO full fla
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 29


 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TCBGT                      USART_ISR_TCBGT               /*!< Transmission com
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RXFT                       USART_ISR_RXFT                /*!< RX FIFO threshol
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TXFT                       USART_ISR_TXFT                /*!< TX FIFO threshol
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE_RXFNEIE             USART_CR1_RXNEIE_RXFNEIE      /*!< Read data regist
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_TXEIE_TXFNFIE              USART_CR1_TXEIE_TXFNFIE       /*!< Transmit data re
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_CMIE                       USART_CR1_CMIE                /*!< Character match 
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_RTOIE                      USART_CR1_RTOIE               /*!< Receiver timeout
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_EOBIE                      USART_CR1_EOBIE               /*!< End of Block int
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_TXFEIE                     USART_CR1_TXFEIE              /*!< TX FIFO empty in
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_RXFFIE                     USART_CR1_RXFFIE              /*!< RX FIFO full int
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_WUFIE                      USART_CR3_WUFIE               /*!< Wakeup from Stop
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_TXFTIE                     USART_CR3_TXFTIE              /*!< TX FIFO threshol
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_TCBGTIE                    USART_CR3_TCBGTIE             /*!< Transmission com
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_RXFTIE                     USART_CR3_RXFTIE              /*!< RX FIFO threshol
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_FIFOTHRESHOLD FIFO Threshold
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 30


 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_8              0x00000000U /*!< FIFO reaches 1/8 of its depth */
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_4              0x00000001U /*!< FIFO reaches 1/4 of its depth */
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_2              0x00000002U /*!< FIFO reaches 1/2 of its depth */
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_3_4              0x00000003U /*!< FIFO reaches 3/4 of its depth */
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_7_8              0x00000004U /*!< FIFO reaches 7/8 of its depth */
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_8_8              0x00000005U /*!< FIFO becomes empty for TX and full
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_7B                   USART_CR1_M1            /*!< 7 bits word length : S
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M0            /*!< 9 bits word length : S
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 31


 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PRESCALER Clock Source Prescaler
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV1                 0x00000000U                                        
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV2                 (USART_PRESC_PRESCALER_0)                          
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV4                 (USART_PRESC_PRESCALER_1)                          
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV6                 (USART_PRESC_PRESCALER_1 | USART_PRESC_PRESCALER_0)
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV8                 (USART_PRESC_PRESCALER_2)                          
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV10                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_0)
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV12                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_1)
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV16                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_1 
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV32                (USART_PRESC_PRESCALER_3)                          
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV64                (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_0)
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV128               (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_1)
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 32


 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV256               (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_1 
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXRX TX RX Pins Swap
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_TXRX_STANDARD                  0x00000000U           /*!< TX/RX pins are used as d
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_TXRX_SWAPPED                   (USART_CR2_SWAP)      /*!< TX and RX pins functions
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_STANDARD           0x00000000U           /*!< RX pin signal works usin
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_INVERTED           (USART_CR2_RXINV)     /*!< RX pin signal values are
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_STANDARD           0x00000000U           /*!< TX pin signal works usin
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_INVERTED           (USART_CR2_TXINV)     /*!< TX pin signal values are
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_BINARY_LOGIC Binary Data Inversion
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_POSITIVE          0x00000000U           /*!< Logical data from the da
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_NEGATIVE          USART_CR2_DATAINV     /*!< Logical data from the da
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_BITORDER Bit Order
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_BITORDER_LSBFIRST              0x00000000U           /*!< data is transmitted/rece
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 33


 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_BITORDER_MSBFIRST              USART_CR2_MSBFIRST    /*!< data is transmitted/rece
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_AUTOBAUD_DETECT_ON Autobaud Detection
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_STARTBIT    0x00000000U                                 /*!< Me
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE USART_CR2_ABRMODE_0                         /*!< Fa
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME    USART_CR2_ABRMODE_1                         /*!< 0x
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_55_FRAME    (USART_CR2_ABRMODE_1 | USART_CR2_ABRMODE_0) /*!< 0x
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_ADDRESS_DETECT Address Length Detection
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_4B              0x00000000U           /*!< 4-bit address detection 
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_7B              USART_CR2_ADDM7       /*!< 7-bit address detection 
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP_ON Wakeup Activation
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_ADDRESS              0x00000000U                             /*!< Wake u
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_STARTBIT             USART_CR3_WUS_1                         /*!< Wake u
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_RXNE                 (USART_CR3_WUS_0 | USART_CR3_WUS_1)     /*!< Wake u
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 34


 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DE_POLARITY Driver Enable Polarity
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DE_POLARITY_HIGH               0x00000000U           /*!< DE signal is active high
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DE_POLARITY_LOW                USART_CR3_DEP         /*!< DE signal is active low 
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DMA_REG_DATA DMA Register Data
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_TRANSMIT          0x00000000U          /*!< Get address of data regis
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_RECEIVE           0x00000001U          /*!< Get address of data regis
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Write a value in USART register
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __REG__ Register to be written
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Read a value in USART register
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __REG__ Register to be read
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Register value
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 35


 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @if USART_PRESC_PRESCALER
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __PRESCALER__ This parameter can be one of the following values:
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @endif
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __PRESCALER__, __BAUDRATE__) (((((__PERIPHCLK__)/(U
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                                                                + ((__BAUDRATE__)/2U
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__) ((((__PERIPHCLK__)*2U)\
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                                                 + ((__BAUDRATE__)/2U))/(__BAUDRATE_
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @if USART_PRESC_PRESCALER
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __PRESCALER__ This parameter can be one of the following values:
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @endif
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 36


 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __PRESCALER__, __BAUDRATE__) ((((__PERIPHCLK__)/(U
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                                                                 + ((__BAUDRATE__)/2
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__) (((__PERIPHCLK__) + ((__BAUDRATE__)/
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART Enable
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         flags, in the USARTx_ISR are set to their default values.
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 37


 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE)) ? 1UL : 0UL);
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  FIFO Mode Enable
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_EnableFIFO
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableFIFO(USART_TypeDef *USARTx)
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_FIFOEN);
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  FIFO Mode Disable
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_DisableFIFO
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableFIFO(USART_TypeDef *USARTx)
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_FIFOEN);
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if FIFO Mode is enabled
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_IsEnabledFIFO
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledFIFO(USART_TypeDef *USARTx)
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_FIFOEN) == (USART_CR1_FIFOEN)) ? 1UL : 0UL);
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure TX FIFO Threshold
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_SetTXFIFOThreshold
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Threshold This parameter can be one of the following values:
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 38


 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXFIFOThreshold(USART_TypeDef *USARTx, uint32_t Threshold)
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_TXFTCFG, Threshold << USART_CR3_TXFTCFG_Pos);
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return TX FIFO Threshold Configuration
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_GetTXFIFOThreshold
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXFIFOThreshold(USART_TypeDef *USARTx)
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure RX FIFO Threshold
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RXFTCFG       LL_USART_SetRXFIFOThreshold
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Threshold This parameter can be one of the following values:
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXFIFOThreshold(USART_TypeDef *USARTx, uint32_t Threshold)
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RXFTCFG, Threshold << USART_CR3_RXFTCFG_Pos);
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return RX FIFO Threshold Configuration
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RXFTCFG       LL_USART_GetRXFIFOThreshold
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 39


 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXFIFOThreshold(USART_TypeDef *USARTx)
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure TX and RX FIFOs Threshold
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_ConfigFIFOsThreshold\n
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          RXFTCFG       LL_USART_ConfigFIFOsThreshold
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  TXThreshold This parameter can be one of the following values:
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  RXThreshold This parameter can be one of the following values:
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigFIFOsThreshold(USART_TypeDef *USARTx, uint32_t TXThreshold, uin
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_TXFTCFG | USART_CR3_RXFTCFG, (TXThreshold << USART_CR3_TXFTCFG_
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART enabled in STOP Mode.
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When this function is enabled, USART is able to wake up the MCU from Stop mode, provide
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         USART clock selection is HSI or LSE in RCC.
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_EnableInStopMode
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableInStopMode(USART_TypeDef *USARTx)
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UESM);
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART disabled in STOP Mode.
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When this function is disabled, USART is not able to wake up the MCU from Stop mode
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 40


 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_DisableInStopMode
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableInStopMode(USART_TypeDef *USARTx)
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UESM);
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if USART is enabled in STOP Mode (able to wake up MCU from Stop mode or not)
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_IsEnabledInStopMode
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledInStopMode(USART_TypeDef *USARTx)
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM)) ? 1UL : 0UL);
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR3_UCESM)
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART Clock enabled in STOP Mode
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When this function is called, USART Clock is enabled while in STOP mode
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          UCESM         LL_USART_EnableClockInStopMode
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableClockInStopMode(USART_TypeDef *USARTx)
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_UCESM);
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART clock disabled in STOP Mode
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When this function is called, USART Clock is disabled while in STOP mode
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          UCESM         LL_USART_DisableClockInStopMode
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableClockInStopMode(USART_TypeDef *USARTx)
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_UCESM);
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if USART clock is enabled in STOP Mode
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          UCESM         LL_USART_IsClockEnabledInStopMode
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsClockEnabledInStopMode(USART_TypeDef *USARTx)
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_UCESM) == (USART_CR3_UCESM));
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 41


 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR3_UCESM */
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RE);
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Receiver Disable
 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Transmitter Enable
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_TE);
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Transmitter Disable
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         of Transmitter and Receiver
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 42


 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
1000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
1001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
1002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
1003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
1005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
1007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
1011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
1012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
1013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
1014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
1015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
1016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
1024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
1026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
1030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
1031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
1032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
1039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
1041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 43


1043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
1045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
1046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
1048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
1049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
1050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
1053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
1055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
1059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
1060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
1063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
1064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
1066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
1068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
1072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_SetDataWidth\n
1073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          M1            LL_USART_SetDataWidth
1074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
1082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
1088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_GetDataWidth\n
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          M1            LL_USART_GetDataWidth
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
1097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
1099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 44


1100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Allow switch between Mute Mode and Active mode
1103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_EnableMuteMode
1104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableMuteMode(USART_TypeDef *USARTx)
1108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_MME);
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
1114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_DisableMuteMode
1115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableMuteMode(USART_TypeDef *USARTx)
1119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_MME);
1121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
1125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_IsEnabledMuteMode
1126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledMuteMode(USART_TypeDef *USARTx)
1130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_MME) == (USART_CR1_MME)) ? 1UL : 0UL);
1132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
1136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
1137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
1144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
1146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Oversampling mode
1150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
1151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 45


1157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
1159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
1163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
1166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
1168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
1173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
1175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
1179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
1180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
1183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
1189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
1191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
1195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
1198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
1200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
1205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
1207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
1211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 46


1214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
1220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
1222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
1226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
1229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
1231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
1236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
1238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
1242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
1245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
1251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
1253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
1257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
1261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
1262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
1263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
1264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
1265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
1266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
1268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 47


1271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
1274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
1279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
1281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
1284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Clock source prescaler for baudrate generator and oversampling
1286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
1287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
1288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll PRESC        PRESCALER     LL_USART_SetPrescaler
1289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
1291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->PRESC, USART_PRESC_PRESCALER, (uint16_t)PrescalerValue);
1308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve the Clock source prescaler for baudrate generator and oversampling
1312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
1313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
1314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll PRESC        PRESCALER     LL_USART_GetPrescaler
1315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 48


1328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetPrescaler(USART_TypeDef *USARTx)
1331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->PRESC, USART_PRESC_PRESCALER));
1333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
1336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
1338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
1341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
1345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
1351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
1354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
1358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
1360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
1364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
1367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
1371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN)) ? 1UL : 0UL);
1373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set the length of the stop bits
1377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
1378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 49


1385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
1387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
1393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
1394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
1402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
1404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
1408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
1410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
1411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
1412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
1413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
1414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          M0            LL_USART_ConfigCharacter\n
1415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          M1            LL_USART_ConfigCharacter\n
1416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
1417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
1434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                               uint32_t StopBits)
1435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
1437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure TX/RX pins swapping setting.
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 50


1442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_SetTXRXSwap
1443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  SwapConfig This parameter can be one of the following values:
1445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXRXSwap(USART_TypeDef *USARTx, uint32_t SwapConfig)
1450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_SWAP, SwapConfig);
1452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
1456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_GetTXRXSwap
1457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXRXSwap(USART_TypeDef *USARTx)
1463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_SWAP));
1465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure RX pin active level logic
1469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_SetRXPinLevel
1470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_RXINV, PinInvMethod);
1479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve RX pin active level logic configuration
1483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_GetRXPinLevel
1484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXPinLevel(USART_TypeDef *USARTx)
1490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_RXINV));
1492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure TX pin active level logic
1496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_SetTXPinLevel
1497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 51


1499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_TXINV, PinInvMethod);
1506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve TX pin active level logic configuration
1510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_GetTXPinLevel
1511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXPinLevel(USART_TypeDef *USARTx)
1517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_TXINV));
1519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Binary data logic.
1523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
1524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
1525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_SetBinaryDataLogic
1526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  DataLogic This parameter can be one of the following values:
1528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBinaryDataLogic(USART_TypeDef *USARTx, uint32_t DataLogic)
1533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_DATAINV, DataLogic);
1535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve Binary data configuration
1539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_GetBinaryDataLogic
1540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBinaryDataLogic(USART_TypeDef *USARTx)
1546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_DATAINV));
1548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
1552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_SetTransferBitOrder
1555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 52


1556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  BitOrder This parameter can be one of the following values:
1557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferBitOrder(USART_TypeDef *USARTx, uint32_t BitOrder)
1562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
1564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
1568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_GetTransferBitOrder
1571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferBitOrder(USART_TypeDef *USARTx)
1577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_MSBFIRST));
1579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Auto Baud-Rate Detection
1583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_EnableAutoBaudRate
1586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableAutoBaudRate(USART_TypeDef *USARTx)
1590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_ABREN);
1592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Auto Baud-Rate Detection
1596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_DisableAutoBaudRate
1599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableAutoBaudRate(USART_TypeDef *USARTx)
1603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_ABREN);
1605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Auto Baud-Rate Detection mechanism is enabled
1609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_IsEnabledAutoBaud
1612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 53


1613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledAutoBaud(USART_TypeDef *USARTx)
1616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_ABREN) == (USART_CR2_ABREN)) ? 1UL : 0UL);
1618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Auto Baud-Rate mode bits
1622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_SetAutoBaudRateMode
1625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  AutoBaudRateMode This parameter can be one of the following values:
1627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetAutoBaudRateMode(USART_TypeDef *USARTx, uint32_t AutoBaudRateMode)
1634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ABRMODE, AutoBaudRateMode);
1636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Auto Baud-Rate mode
1640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_GetAutoBaudRateMode
1643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetAutoBaudRateMode(USART_TypeDef *USARTx)
1651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ABRMODE));
1653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Receiver Timeout
1657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_EnableRxTimeout
1658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRxTimeout(USART_TypeDef *USARTx)
1662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_RTOEN);
1664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Receiver Timeout
1668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_DisableRxTimeout
1669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 54


1670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRxTimeout(USART_TypeDef *USARTx)
1673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_RTOEN);
1675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Receiver Timeout feature is enabled
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_IsEnabledRxTimeout
1680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledRxTimeout(USART_TypeDef *USARTx)
1684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_RTOEN) == (USART_CR2_RTOEN)) ? 1UL : 0UL);
1686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Address of the USART node.
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
1691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         for wake up with address mark detection.
1692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
1693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (b7-b4 should be set to 0)
1694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
1695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
1696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         for wake up with 7-bit address mark detection.
1697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
1698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         It may also be used for character detection during normal reception,
1699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
1700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
1701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         value and CMF flag is set on match)
1702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_ConfigNodeAddress\n
1703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          ADDM7         LL_USART_ConfigNodeAddress
1704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  AddressLen This parameter can be one of the following values:
1706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  NodeAddress 4 or 7 bit Address of the USART node.
1709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigNodeAddress(USART_TypeDef *USARTx, uint32_t AddressLen, uint32_
1712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
1714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_CR2_ADD_Pos)));
1715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return 8 bit Address of the USART node as set in ADD field of CR2.
1719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
1720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
1721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
1722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
1723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
1724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
1726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 55


1727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
1728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD) >> USART_CR2_ADD_Pos);
1730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
1734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ADDM7         LL_USART_GetNodeAddressLen
1735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddressLen(USART_TypeDef *USARTx)
1741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADDM7));
1743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
1747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
1750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
1756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
1760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
1763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
1769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
1773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
1776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
1782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 56


1784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
1786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
1789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
1795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
1799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
1802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
1803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
1812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
1814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
1821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
1822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
1830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable One bit sampling method
1836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
1837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 57


1841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable One bit sampling method
1847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
1848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
1852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
1859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT)) ? 1UL : 0UL);
1865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Overrun detection
1869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_EnableOverrunDetect
1870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOverrunDetect(USART_TypeDef *USARTx)
1874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Overrun detection
1880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_DisableOverrunDetect
1881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOverrunDetect(USART_TypeDef *USARTx)
1885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Overrun detection is enabled
1891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_IsEnabledOverrunDetect
1892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOverrunDetect(USART_TypeDef *USARTx)
1896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS) ? 1UL : 0UL);
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 58


1898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_SetWKUPType
1905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Type This parameter can be one of the following values:
1907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWKUPType(USART_TypeDef *USARTx, uint32_t Type)
1913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_WUS, Type);
1915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_GetWKUPType
1922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWKUPType(USART_TypeDef *USARTx)
1929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_WUS));
1931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (Baud rate value != 0)
1939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @if USART_PRESC_PRESCALER
1944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
1945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 59


1955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @endif
1958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
1965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t Presc
1966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                           uint32_t OverSampling,
1967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                           uint32_t BaudRate)
1968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
1969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                           uint32_t BaudRate)
1971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
1972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t usartdiv;
1974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t brrtemp;
1975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
1977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   if (PrescalerValue > LL_USART_PRESCALER_DIV256)
1978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
1979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     /* Do not overstep the size of USART_PRESCALER_TAB */
1980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
1981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else if (OverSampling == LL_USART_OVERSAMPLING_8)
1982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
1983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
1985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
1986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
1987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, (uint8_t)PrescalerValue, BaudRate));
1988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
1989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
1990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
1991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
1992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
1993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     USARTx->BRR = brrtemp;
1994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
1995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else
1996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
1997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
1998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, (uint8_t)PrescalerValue, BaudRate
1999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
2001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
2007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
2008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
2009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
2010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
2011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 60


2012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
2013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @if USART_PRESC_PRESCALER
2014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
2015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
2016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
2017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
2018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
2019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
2020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
2021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
2022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
2023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
2024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
2025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
2026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
2027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @endif
2028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
2029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
2030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
2031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Baud Rate
2032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t P
2035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                               uint32_t OverSampling)
2036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t O
2038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t usartdiv;
2041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t brrresult = 0x0U;
2042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t periphclkpresc = (uint32_t)(PeriphClk / (USART_PRESCALER_TAB[(uint8_t)PrescalerValue]));
2044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   usartdiv = USARTx->BRR;
2047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   if (usartdiv == 0U)
2049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     /* Do not perform a division by 0 */
2051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else if (OverSampling == LL_USART_OVERSAMPLING_8)
2053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
2055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     if (usartdiv != 0U)
2056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     {
2057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****       brrresult = (periphclkpresc * 2U) / usartdiv;
2059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
2061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     }
2063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else
2065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
2067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     {
2068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 61


2069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****       brrresult = periphclkpresc / usartdiv;
2070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
2072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     }
2074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (brrresult);
2076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Receiver Time Out Value (expressed in nb of bits duration)
2080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_SetRxTimeout
2081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Timeout Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
2083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRxTimeout(USART_TypeDef *USARTx, uint32_t Timeout)
2086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_RTO, Timeout);
2088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Get Receiver Time Out Value (expressed in nb of bits duration)
2092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_GetRxTimeout
2093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
2095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRxTimeout(USART_TypeDef *USARTx)
2097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_RTO));
2099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Block Length value in reception
2103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_SetBlockLength
2104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  BlockLength Value between Min_Data=0x00 and Max_Data=0xFF
2106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBlockLength(USART_TypeDef *USARTx, uint32_t BlockLength)
2109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_BLEN, BlockLength << USART_RTOR_BLEN_Pos);
2111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Get Block Length value in reception
2115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_GetBlockLength
2116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
2118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBlockLength(USART_TypeDef *USARTx)
2120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_BLEN) >> USART_RTOR_BLEN_Pos);
2122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 62


2126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
2129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable IrDA mode
2134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
2137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
2141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
2143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable IrDA mode
2147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
2150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
2154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
2156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
2160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
2163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
2167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN)) ? 1UL : 0UL);
2169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
2173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
2176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
2178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
2179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
2180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 63


2183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
2185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
2189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
2192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
2195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
2196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
2198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
2200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
2204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
2205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
2208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
2210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
2213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, (uint16_t)USART_GTPR_PSC, (uint16_t)PrescalerValue);
2215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
2219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
2220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
2223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
2225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
2227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
2229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
2236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 64


2240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
2241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
2244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
2248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
2250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
2254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
2257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
2261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
2263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
2267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
2270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
2274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK)) ? 1UL : 0UL);
2276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Smartcard mode
2280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
2283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
2287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
2289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Smartcard mode
2293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
2296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 65


2297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
2300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
2302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
2306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
2309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
2313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN)) ? 1UL : 0UL);
2315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
2319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   This bit-field specifies the number of retries in transmit and receive, in Smartcard mo
2322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         In transmission mode, it specifies the number of automatic retransmission retries, befo
2323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         generating a transmission error (FE bit set).
2324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         In reception mode, it specifies the number or erroneous reception trials, before genera
2325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         reception error (RXNE and PE bits set)
2326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_SetSmartcardAutoRetryCount
2327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  AutoRetryCount Value between Min_Data=0 and Max_Data=7
2329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardAutoRetryCount(USART_TypeDef *USARTx, uint32_t AutoRetryC
2332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_SCARCNT, AutoRetryCount << USART_CR3_SCARCNT_Pos);
2334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
2338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_GetSmartcardAutoRetryCount
2341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Smartcard Auto-Retry Count value (Value between Min_Data=0 and Max_Data=7)
2343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardAutoRetryCount(USART_TypeDef *USARTx)
2345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_SCARCNT) >> USART_CR3_SCARCNT_Pos);
2347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
2351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
2352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 66


2354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
2355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
2357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
2360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, (uint16_t)USART_GTPR_PSC, (uint16_t)PrescalerValue);
2362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
2366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
2367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
2370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
2372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
2374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
2376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
2380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
2381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
2384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
2386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
2389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, (uint16_t)USART_GTPR_GT, (uint16_t)(GuardTime << USART_GTPR_GT_Pos));
2391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
2395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
2396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
2399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
2401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
2403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_GTPR_GT_Pos);
2405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 67


2411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
2412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
2417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
2420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
2424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
2430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
2433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
2437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
2443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
2446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
2450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL)) ? 1UL : 0UL);
2452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
2459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_SPI_SLAVE Configuration functions related to SPI Slave feat
2460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable SPI Synchronous Slave mode
2464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SLVEN         LL_USART_EnableSPISlave
2467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 68


2468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSPISlave(USART_TypeDef *USARTx)
2471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_SLVEN);
2473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable SPI Synchronous Slave mode
2477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SLVEN         LL_USART_DisableSPISlave
2480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSPISlave(USART_TypeDef *USARTx)
2484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_SLVEN);
2486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if  SPI Synchronous Slave mode is enabled
2490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SLVEN         LL_USART_IsEnabledSPISlave
2493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSPISlave(USART_TypeDef *USARTx)
2497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_SLVEN) == (USART_CR2_SLVEN)) ? 1UL : 0UL);
2499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable SPI Slave Selection using NSS input pin
2503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   SPI Slave Selection depends on NSS input pin
2506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (The slave is selected when NSS is low and deselected when NSS is high).
2507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DIS_NSS       LL_USART_EnableSPISlaveSelect
2508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSPISlaveSelect(USART_TypeDef *USARTx)
2512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_DIS_NSS);
2514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable SPI Slave Selection using NSS input pin
2518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   SPI Slave will be always selected and NSS input pin will be ignored.
2521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DIS_NSS       LL_USART_DisableSPISlaveSelect
2522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 69


2525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSPISlaveSelect(USART_TypeDef *USARTx)
2526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_DIS_NSS);
2528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if  SPI Slave Selection depends on NSS input pin
2532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DIS_NSS       LL_USART_IsEnabledSPISlaveSelect
2535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSPISlaveSelect(USART_TypeDef *USARTx)
2539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_DIS_NSS) != (USART_CR2_DIS_NSS)) ? 1UL : 0UL);
2541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
2548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
2549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
2554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
2557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
2559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
2564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
2566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
2570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
2573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
2579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
2581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 70


2582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable LIN mode
2585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
2588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
2592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable LIN mode
2598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
2601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
2605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
2607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
2611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
2614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
2618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN)) ? 1UL : 0UL);
2620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_DE Configuration functions related to Driver Enable feature
2627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set DEDT (Driver Enable De-Assertion Time), Time value expressed on 5 bits ([4:0] bits)
2632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_SetDEDeassertionTime
2635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 71


2639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEDeassertionTime(USART_TypeDef *USARTx, uint32_t Time)
2640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEDT, Time << USART_CR1_DEDT_Pos);
2642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return DEDT (Driver Enable De-Assertion Time)
2646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_GetDEDeassertionTime
2649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEDeassertionTime(USART_TypeDef *USARTx)
2653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEDT) >> USART_CR1_DEDT_Pos);
2655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set DEAT (Driver Enable Assertion Time), Time value expressed on 5 bits ([4:0] bits).
2659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_SetDEAssertionTime
2662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEAssertionTime(USART_TypeDef *USARTx, uint32_t Time)
2667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEAT, Time << USART_CR1_DEAT_Pos);
2669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return DEAT (Driver Enable Assertion Time)
2673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_GetDEAssertionTime
2676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEAssertionTime(USART_TypeDef *USARTx)
2680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEAT) >> USART_CR1_DEAT_Pos);
2682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Driver Enable (DE) Mode
2686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_EnableDEMode
2689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDEMode(USART_TypeDef *USARTx)
2693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DEM);
2695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 72


2696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Driver Enable (DE) Mode
2699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_DisableDEMode
2702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDEMode(USART_TypeDef *USARTx)
2706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DEM);
2708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Driver Enable (DE) Mode is enabled
2712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_IsEnabledDEMode
2715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDEMode(USART_TypeDef *USARTx)
2719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DEM) == (USART_CR3_DEM)) ? 1UL : 0UL);
2721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Select Driver Enable Polarity
2725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_SetDESignalPolarity
2728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
2730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDESignalPolarity(USART_TypeDef *USARTx, uint32_t Polarity)
2735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_DEP, Polarity);
2737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Driver Enable Polarity
2741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_GetDESignalPolarity
2744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDESignalPolarity(USART_TypeDef *USARTx)
2750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_DEP));
2752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 73


2753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
2759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
2764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
2765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
2777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
2780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
2781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
2782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
2783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
2784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
 185              		.loc 3 2787 22 view .LVU64
 186              	.LBB15:
2788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
2790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN, CLKEN bits in the USART_CR2 register,
2791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
2792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 187              		.loc 3 2792 3 view .LVU65
 188 0090 6368     		ldr	r3, [r4, #4]
 189 0092 23F49043 		bic	r3, r3, #18432
 190 0096 6360     		str	r3, [r4, #4]
2793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 191              		.loc 3 2793 3 view .LVU66
 192 0098 A368     		ldr	r3, [r4, #8]
 193 009a 23F02A03 		bic	r3, r3, #42
 194 009e A360     		str	r3, [r4, #8]
 195              	.LVL6:
 196              		.loc 3 2793 3 is_stmt 0 view .LVU67
 197              	.LBE15:
 198              	.LBE14:
  67:Core/Src/usart.c ****     LL_USART_Enable(USART2);
 199              		.loc 1 67 5 is_stmt 1 view .LVU68
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 74


 200              	.LBB16:
 201              	.LBI16:
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 202              		.loc 3 675 22 view .LVU69
 203              	.LBB17:
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 204              		.loc 3 677 3 view .LVU70
 205 00a0 2368     		ldr	r3, [r4]
 206 00a2 43F00103 		orr	r3, r3, #1
 207 00a6 2360     		str	r3, [r4]
 208              	.LVL7:
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 209              		.loc 3 677 3 is_stmt 0 view .LVU71
 210              	.LBE17:
 211              	.LBE16:
  68:Core/Src/usart.c **** 
  69:Core/Src/usart.c **** }
 212              		.loc 1 69 1 view .LVU72
 213 00a8 10B0     		add	sp, sp, #64
 214              	.LCFI2:
 215              		.cfi_def_cfa_offset 16
 216              		@ sp needed
 217 00aa 70BD     		pop	{r4, r5, r6, pc}
 218              	.L4:
 219              		.align	2
 220              	.L3:
 221 00ac 00100240 		.word	1073876992
 222 00b0 00440040 		.word	1073759232
 223              		.cfi_endproc
 224              	.LFE939:
 226              		.text
 227              	.Letext0:
 228              		.file 4 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\machine\\_default_types.h"
 229              		.file 5 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\sys\\_stdint.h"
 230              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 231              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 232              		.file 8 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 233              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 234              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 235              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 236              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h"
 237              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h"
ARM GAS  C:\cygwin64\tmp\ccCtqoQd.s 			page 75


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
C:\cygwin64\tmp\ccCtqoQd.s:18     .text.MX_USART2_UART_Init:00000000 $t
C:\cygwin64\tmp\ccCtqoQd.s:26     .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\cygwin64\tmp\ccCtqoQd.s:221    .text.MX_USART2_UART_Init:000000ac $d

UNDEFINED SYMBOLS
LL_GPIO_Init
LL_USART_Init
