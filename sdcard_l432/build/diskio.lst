ARM GAS  C:\cygwin64\tmp\ccmdDRXV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"diskio.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.disk_status,"ax",%progbits
  18              		.align	1
  19              		.global	disk_status
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	disk_status:
  27              	.LVL0:
  28              	.LFB939:
  29              		.file 1 "./FW/diskio.c"
   1:./FW/diskio.c **** /*-----------------------------------------------------------------------*/
   2:./FW/diskio.c **** /* Low level disk I/O module skeleton for FatFs     (C)ChaN, 2017        */
   3:./FW/diskio.c **** /*                                                                       */
   4:./FW/diskio.c **** /*   Portions COPYRIGHT 2017 STMicroelectronics                          */
   5:./FW/diskio.c **** /*   Portions Copyright (C) 2017, ChaN, all right reserved               */
   6:./FW/diskio.c **** /*-----------------------------------------------------------------------*/
   7:./FW/diskio.c **** /* If a working storage control module is available, it should be        */
   8:./FW/diskio.c **** /* attached to the FatFs via a glue function rather than modifying it.   */
   9:./FW/diskio.c **** /* This is an example of glue functions to attach various existing      */
  10:./FW/diskio.c **** /* storage control modules to the FatFs module with a defined API.       */
  11:./FW/diskio.c **** /*-----------------------------------------------------------------------*/
  12:./FW/diskio.c **** 
  13:./FW/diskio.c **** /* Includes ------------------------------------------------------------------*/
  14:./FW/diskio.c **** #include "diskio.h"
  15:./FW/diskio.c **** #include "ff_gen_drv.h"
  16:./FW/diskio.c **** 
  17:./FW/diskio.c **** #if defined ( __GNUC__ )
  18:./FW/diskio.c **** #ifndef __weak
  19:./FW/diskio.c **** #define __weak __attribute__((weak))
  20:./FW/diskio.c **** #endif
  21:./FW/diskio.c **** #endif
  22:./FW/diskio.c **** 
  23:./FW/diskio.c **** /* Private typedef -----------------------------------------------------------*/
  24:./FW/diskio.c **** /* Private define ------------------------------------------------------------*/
  25:./FW/diskio.c **** /* Private variables ---------------------------------------------------------*/
  26:./FW/diskio.c **** extern Disk_drvTypeDef  disk;
  27:./FW/diskio.c **** 
  28:./FW/diskio.c **** /* Private function prototypes -----------------------------------------------*/
  29:./FW/diskio.c **** /* Private functions ---------------------------------------------------------*/
ARM GAS  C:\cygwin64\tmp\ccmdDRXV.s 			page 2


  30:./FW/diskio.c **** 
  31:./FW/diskio.c **** /**
  32:./FW/diskio.c ****   * @brief  Gets Disk Status
  33:./FW/diskio.c ****   * @param  pdrv: Physical drive number (0..)
  34:./FW/diskio.c ****   * @retval DSTATUS: Operation status
  35:./FW/diskio.c ****   */
  36:./FW/diskio.c **** DSTATUS disk_status (
  37:./FW/diskio.c ****     BYTE pdrv       /* Physical drive number to identify the drive */
  38:./FW/diskio.c **** ) {
  30              		.loc 1 38 3 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 38 3 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  39:./FW/diskio.c ****     DSTATUS stat;
  40              		.loc 1 39 5 is_stmt 1 view .LVU2
  40:./FW/diskio.c **** 
  41:./FW/diskio.c ****     stat = disk.drv[pdrv]->disk_status(disk.lun[pdrv]);
  41              		.loc 1 41 5 view .LVU3
  42              		.loc 1 41 20 is_stmt 0 view .LVU4
  43 0002 044B     		ldr	r3, .L3
  44 0004 03EB8002 		add	r2, r3, r0, lsl #2
  45 0008 5268     		ldr	r2, [r2, #4]
  46              		.loc 1 41 26 view .LVU5
  47 000a 5268     		ldr	r2, [r2, #4]
  48              		.loc 1 41 12 view .LVU6
  49 000c 0344     		add	r3, r3, r0
  50 000e 187A     		ldrb	r0, [r3, #8]	@ zero_extendqisi2
  51              	.LVL1:
  52              		.loc 1 41 12 view .LVU7
  53 0010 9047     		blx	r2
  54              	.LVL2:
  42:./FW/diskio.c ****     return stat;
  55              		.loc 1 42 5 is_stmt 1 view .LVU8
  43:./FW/diskio.c **** }
  56              		.loc 1 43 1 is_stmt 0 view .LVU9
  57 0012 08BD     		pop	{r3, pc}
  58              	.L4:
  59              		.align	2
  60              	.L3:
  61 0014 00000000 		.word	disk
  62              		.cfi_endproc
  63              	.LFE939:
  65              		.section	.text.disk_initialize,"ax",%progbits
  66              		.align	1
  67              		.global	disk_initialize
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv4-sp-d16
  73              	disk_initialize:
  74              	.LVL3:
ARM GAS  C:\cygwin64\tmp\ccmdDRXV.s 			page 3


  75              	.LFB940:
  44:./FW/diskio.c **** 
  45:./FW/diskio.c **** /**
  46:./FW/diskio.c ****   * @brief  Initializes a Drive
  47:./FW/diskio.c ****   * @param  pdrv: Physical drive number (0..)
  48:./FW/diskio.c ****   * @retval DSTATUS: Operation status
  49:./FW/diskio.c ****   */
  50:./FW/diskio.c **** DSTATUS disk_initialize (
  51:./FW/diskio.c ****     BYTE pdrv               /* Physical drive nmuber to identify the drive */
  52:./FW/diskio.c **** ) {
  76              		.loc 1 52 3 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		.loc 1 52 3 is_stmt 0 view .LVU11
  81 0000 08B5     		push	{r3, lr}
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
  53:./FW/diskio.c ****     DSTATUS stat = RES_OK;
  86              		.loc 1 53 5 is_stmt 1 view .LVU12
  87              	.LVL4:
  54:./FW/diskio.c **** 
  55:./FW/diskio.c ****     if(disk.is_initialized[pdrv] == 0) {
  88              		.loc 1 55 5 view .LVU13
  89              		.loc 1 55 27 is_stmt 0 view .LVU14
  90 0002 084B     		ldr	r3, .L9
  91 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
  92              		.loc 1 55 7 view .LVU15
  93 0006 53B9     		cbnz	r3, .L7
  56:./FW/diskio.c ****         disk.is_initialized[pdrv] = 1;
  94              		.loc 1 56 9 is_stmt 1 view .LVU16
  95              		.loc 1 56 35 is_stmt 0 view .LVU17
  96 0008 064B     		ldr	r3, .L9
  97 000a 0122     		movs	r2, #1
  98 000c 1A54     		strb	r2, [r3, r0]
  57:./FW/diskio.c ****         stat = disk.drv[pdrv]->disk_initialize(disk.lun[pdrv]);
  99              		.loc 1 57 9 is_stmt 1 view .LVU18
 100              		.loc 1 57 24 is_stmt 0 view .LVU19
 101 000e 03EB8002 		add	r2, r3, r0, lsl #2
 102 0012 5268     		ldr	r2, [r2, #4]
 103              		.loc 1 57 30 view .LVU20
 104 0014 1268     		ldr	r2, [r2]
 105              		.loc 1 57 16 view .LVU21
 106 0016 1844     		add	r0, r0, r3
 107              	.LVL5:
 108              		.loc 1 57 16 view .LVU22
 109 0018 007A     		ldrb	r0, [r0, #8]	@ zero_extendqisi2
 110 001a 9047     		blx	r2
 111              	.LVL6:
 112              	.L6:
  58:./FW/diskio.c ****     }
  59:./FW/diskio.c ****     return stat;
 113              		.loc 1 59 5 is_stmt 1 view .LVU23
  60:./FW/diskio.c **** }
 114              		.loc 1 60 1 is_stmt 0 view .LVU24
ARM GAS  C:\cygwin64\tmp\ccmdDRXV.s 			page 4


 115 001c 08BD     		pop	{r3, pc}
 116              	.LVL7:
 117              	.L7:
  53:./FW/diskio.c **** 
 118              		.loc 1 53 13 view .LVU25
 119 001e 0020     		movs	r0, #0
 120              	.LVL8:
  53:./FW/diskio.c **** 
 121              		.loc 1 53 13 view .LVU26
 122 0020 FCE7     		b	.L6
 123              	.L10:
 124 0022 00BF     		.align	2
 125              	.L9:
 126 0024 00000000 		.word	disk
 127              		.cfi_endproc
 128              	.LFE940:
 130              		.section	.text.disk_read,"ax",%progbits
 131              		.align	1
 132              		.global	disk_read
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	disk_read:
 139              	.LVL9:
 140              	.LFB941:
  61:./FW/diskio.c **** 
  62:./FW/diskio.c **** /**
  63:./FW/diskio.c ****   * @brief  Reads Sector(s)
  64:./FW/diskio.c ****   * @param  pdrv: Physical drive number (0..)
  65:./FW/diskio.c ****   * @param  *buff: Data buffer to store read data
  66:./FW/diskio.c ****   * @param  sector: Sector address (LBA)
  67:./FW/diskio.c ****   * @param  count: Number of sectors to read (1..128)
  68:./FW/diskio.c ****   * @retval DRESULT: Operation result
  69:./FW/diskio.c ****   */
  70:./FW/diskio.c **** DRESULT disk_read (
  71:./FW/diskio.c ****     BYTE pdrv,      /* Physical drive nmuber to identify the drive */
  72:./FW/diskio.c ****     BYTE *buff,     /* Data buffer to store read data */
  73:./FW/diskio.c ****     DWORD sector,           /* Sector address in LBA */
  74:./FW/diskio.c ****     UINT count      /* Number of sectors to read */
  75:./FW/diskio.c **** ) {
 141              		.loc 1 75 3 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		.loc 1 75 3 is_stmt 0 view .LVU28
 146 0000 38B5     		push	{r3, r4, r5, lr}
 147              	.LCFI2:
 148              		.cfi_def_cfa_offset 16
 149              		.cfi_offset 3, -16
 150              		.cfi_offset 4, -12
 151              		.cfi_offset 5, -8
 152              		.cfi_offset 14, -4
  76:./FW/diskio.c ****     DRESULT res;
 153              		.loc 1 76 5 is_stmt 1 view .LVU29
  77:./FW/diskio.c **** 
  78:./FW/diskio.c ****     res = disk.drv[pdrv]->disk_read(disk.lun[pdrv], buff, sector, count);
ARM GAS  C:\cygwin64\tmp\ccmdDRXV.s 			page 5


 154              		.loc 1 78 5 view .LVU30
 155              		.loc 1 78 19 is_stmt 0 view .LVU31
 156 0002 044C     		ldr	r4, .L13
 157 0004 04EB8005 		add	r5, r4, r0, lsl #2
 158 0008 6D68     		ldr	r5, [r5, #4]
 159              		.loc 1 78 25 view .LVU32
 160 000a AD68     		ldr	r5, [r5, #8]
 161              		.loc 1 78 11 view .LVU33
 162 000c 0444     		add	r4, r4, r0
 163 000e 207A     		ldrb	r0, [r4, #8]	@ zero_extendqisi2
 164              	.LVL10:
 165              		.loc 1 78 11 view .LVU34
 166 0010 A847     		blx	r5
 167              	.LVL11:
  79:./FW/diskio.c ****     return res;
 168              		.loc 1 79 5 is_stmt 1 view .LVU35
  80:./FW/diskio.c **** }
 169              		.loc 1 80 1 is_stmt 0 view .LVU36
 170 0012 38BD     		pop	{r3, r4, r5, pc}
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 0014 00000000 		.word	disk
 175              		.cfi_endproc
 176              	.LFE941:
 178              		.section	.text.disk_write,"ax",%progbits
 179              		.align	1
 180              		.global	disk_write
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	disk_write:
 187              	.LVL12:
 188              	.LFB942:
  81:./FW/diskio.c **** 
  82:./FW/diskio.c **** /**
  83:./FW/diskio.c ****   * @brief  Writes Sector(s)
  84:./FW/diskio.c ****   * @param  pdrv: Physical drive number (0..)
  85:./FW/diskio.c ****   * @param  *buff: Data to be written
  86:./FW/diskio.c ****   * @param  sector: Sector address (LBA)
  87:./FW/diskio.c ****   * @param  count: Number of sectors to write (1..128)
  88:./FW/diskio.c ****   * @retval DRESULT: Operation result
  89:./FW/diskio.c ****   */
  90:./FW/diskio.c **** #if _USE_WRITE == 1
  91:./FW/diskio.c **** DRESULT disk_write (
  92:./FW/diskio.c ****     BYTE pdrv,      /* Physical drive nmuber to identify the drive */
  93:./FW/diskio.c ****     const BYTE *buff,   /* Data to be written */
  94:./FW/diskio.c ****     DWORD sector,       /* Sector address in LBA */
  95:./FW/diskio.c ****     UINT count          /* Number of sectors to write */
  96:./FW/diskio.c **** ) {
 189              		.loc 1 96 3 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		.loc 1 96 3 is_stmt 0 view .LVU38
 194 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\cygwin64\tmp\ccmdDRXV.s 			page 6


 195              	.LCFI3:
 196              		.cfi_def_cfa_offset 16
 197              		.cfi_offset 3, -16
 198              		.cfi_offset 4, -12
 199              		.cfi_offset 5, -8
 200              		.cfi_offset 14, -4
  97:./FW/diskio.c ****     DRESULT res;
 201              		.loc 1 97 5 is_stmt 1 view .LVU39
  98:./FW/diskio.c **** 
  99:./FW/diskio.c ****     res = disk.drv[pdrv]->disk_write(disk.lun[pdrv], buff, sector, count);
 202              		.loc 1 99 5 view .LVU40
 203              		.loc 1 99 19 is_stmt 0 view .LVU41
 204 0002 044C     		ldr	r4, .L17
 205 0004 04EB8005 		add	r5, r4, r0, lsl #2
 206 0008 6D68     		ldr	r5, [r5, #4]
 207              		.loc 1 99 25 view .LVU42
 208 000a ED68     		ldr	r5, [r5, #12]
 209              		.loc 1 99 11 view .LVU43
 210 000c 0444     		add	r4, r4, r0
 211 000e 207A     		ldrb	r0, [r4, #8]	@ zero_extendqisi2
 212              	.LVL13:
 213              		.loc 1 99 11 view .LVU44
 214 0010 A847     		blx	r5
 215              	.LVL14:
 100:./FW/diskio.c ****     return res;
 216              		.loc 1 100 5 is_stmt 1 view .LVU45
 101:./FW/diskio.c **** }
 217              		.loc 1 101 1 is_stmt 0 view .LVU46
 218 0012 38BD     		pop	{r3, r4, r5, pc}
 219              	.L18:
 220              		.align	2
 221              	.L17:
 222 0014 00000000 		.word	disk
 223              		.cfi_endproc
 224              	.LFE942:
 226              		.section	.text.disk_ioctl,"ax",%progbits
 227              		.align	1
 228              		.global	disk_ioctl
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv4-sp-d16
 234              	disk_ioctl:
 235              	.LVL15:
 236              	.LFB943:
 102:./FW/diskio.c **** #endif /* _USE_WRITE == 1 */
 103:./FW/diskio.c **** 
 104:./FW/diskio.c **** /**
 105:./FW/diskio.c ****   * @brief  I/O control operation
 106:./FW/diskio.c ****   * @param  pdrv: Physical drive number (0..)
 107:./FW/diskio.c ****   * @param  cmd: Control code
 108:./FW/diskio.c ****   * @param  *buff: Buffer to send/receive control data
 109:./FW/diskio.c ****   * @retval DRESULT: Operation result
 110:./FW/diskio.c ****   */
 111:./FW/diskio.c **** #if _USE_IOCTL == 1
 112:./FW/diskio.c **** DRESULT disk_ioctl (
 113:./FW/diskio.c ****     BYTE pdrv,      /* Physical drive nmuber (0..) */
ARM GAS  C:\cygwin64\tmp\ccmdDRXV.s 			page 7


 114:./FW/diskio.c ****     BYTE cmd,       /* Control code */
 115:./FW/diskio.c ****     void *buff      /* Buffer to send/receive control data */
 116:./FW/diskio.c **** ) {
 237              		.loc 1 116 3 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		.loc 1 116 3 is_stmt 0 view .LVU48
 242 0000 10B5     		push	{r4, lr}
 243              	.LCFI4:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 4, -8
 246              		.cfi_offset 14, -4
 117:./FW/diskio.c ****     DRESULT res;
 247              		.loc 1 117 5 is_stmt 1 view .LVU49
 118:./FW/diskio.c **** 
 119:./FW/diskio.c ****     res = disk.drv[pdrv]->disk_ioctl(disk.lun[pdrv], cmd, buff);
 248              		.loc 1 119 5 view .LVU50
 249              		.loc 1 119 19 is_stmt 0 view .LVU51
 250 0002 044B     		ldr	r3, .L21
 251 0004 03EB8004 		add	r4, r3, r0, lsl #2
 252 0008 6468     		ldr	r4, [r4, #4]
 253              		.loc 1 119 25 view .LVU52
 254 000a 2469     		ldr	r4, [r4, #16]
 255              		.loc 1 119 11 view .LVU53
 256 000c 0344     		add	r3, r3, r0
 257 000e 187A     		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 258              	.LVL16:
 259              		.loc 1 119 11 view .LVU54
 260 0010 A047     		blx	r4
 261              	.LVL17:
 120:./FW/diskio.c ****     return res;
 262              		.loc 1 120 5 is_stmt 1 view .LVU55
 121:./FW/diskio.c **** }
 263              		.loc 1 121 1 is_stmt 0 view .LVU56
 264 0012 10BD     		pop	{r4, pc}
 265              	.L22:
 266              		.align	2
 267              	.L21:
 268 0014 00000000 		.word	disk
 269              		.cfi_endproc
 270              	.LFE943:
 272              		.section	.text.get_fattime,"ax",%progbits
 273              		.align	1
 274              		.weak	get_fattime
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv4-sp-d16
 280              	get_fattime:
 281              	.LFB944:
 122:./FW/diskio.c **** #endif /* _USE_IOCTL == 1 */
 123:./FW/diskio.c **** 
 124:./FW/diskio.c **** /**
 125:./FW/diskio.c ****   * @brief  Gets Time from RTC
 126:./FW/diskio.c ****   * @param  None
 127:./FW/diskio.c ****   * @retval Time in DWORD
ARM GAS  C:\cygwin64\tmp\ccmdDRXV.s 			page 8


 128:./FW/diskio.c ****   */
 129:./FW/diskio.c **** __weak DWORD get_fattime (void) {
 282              		.loc 1 129 33 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 130:./FW/diskio.c ****     return 0;
 287              		.loc 1 130 5 view .LVU58
 131:./FW/diskio.c **** }
 288              		.loc 1 131 1 is_stmt 0 view .LVU59
 289 0000 0020     		movs	r0, #0
 290 0002 7047     		bx	lr
 291              		.cfi_endproc
 292              	.LFE944:
 294              		.text
 295              	.Letext0:
 296              		.file 2 "./FW/integer.h"
 297              		.file 3 "./FW/diskio.h"
 298              		.file 4 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\machine\\_default_types.h"
 299              		.file 5 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\sys\\_stdint.h"
 300              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 301              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 302              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 303              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 304              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 305              		.file 11 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\sys\\lock.h"
 306              		.file 12 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\sys\\_types.h"
 307              		.file 13 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h
 308              		.file 14 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\sys\\reent.h"
 309              		.file 15 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\stdlib.h"
 310              		.file 16 "./FW/ff_gen_drv.h"
 311              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h"
ARM GAS  C:\cygwin64\tmp\ccmdDRXV.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 diskio.c
C:\cygwin64\tmp\ccmdDRXV.s:18     .text.disk_status:00000000 $t
C:\cygwin64\tmp\ccmdDRXV.s:26     .text.disk_status:00000000 disk_status
C:\cygwin64\tmp\ccmdDRXV.s:61     .text.disk_status:00000014 $d
C:\cygwin64\tmp\ccmdDRXV.s:66     .text.disk_initialize:00000000 $t
C:\cygwin64\tmp\ccmdDRXV.s:73     .text.disk_initialize:00000000 disk_initialize
C:\cygwin64\tmp\ccmdDRXV.s:126    .text.disk_initialize:00000024 $d
C:\cygwin64\tmp\ccmdDRXV.s:131    .text.disk_read:00000000 $t
C:\cygwin64\tmp\ccmdDRXV.s:138    .text.disk_read:00000000 disk_read
C:\cygwin64\tmp\ccmdDRXV.s:174    .text.disk_read:00000014 $d
C:\cygwin64\tmp\ccmdDRXV.s:179    .text.disk_write:00000000 $t
C:\cygwin64\tmp\ccmdDRXV.s:186    .text.disk_write:00000000 disk_write
C:\cygwin64\tmp\ccmdDRXV.s:222    .text.disk_write:00000014 $d
C:\cygwin64\tmp\ccmdDRXV.s:227    .text.disk_ioctl:00000000 $t
C:\cygwin64\tmp\ccmdDRXV.s:234    .text.disk_ioctl:00000000 disk_ioctl
C:\cygwin64\tmp\ccmdDRXV.s:268    .text.disk_ioctl:00000014 $d
C:\cygwin64\tmp\ccmdDRXV.s:273    .text.get_fattime:00000000 $t
C:\cygwin64\tmp\ccmdDRXV.s:280    .text.get_fattime:00000000 get_fattime

UNDEFINED SYMBOLS
disk
