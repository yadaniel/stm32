ARM GAS  C:\cygwin64\tmp\cc3rMfFb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"user_diskio.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USER_initialize,"ax",%progbits
  18              		.align	1
  19              		.global	USER_initialize
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	USER_initialize:
  27              	.LVL0:
  28              	.LFB939:
  29              		.file 1 "./FW/user_diskio.c"
   1:./FW/user_diskio.c **** /* USER CODE BEGIN Header */
   2:./FW/user_diskio.c **** /**
   3:./FW/user_diskio.c ****  ******************************************************************************
   4:./FW/user_diskio.c ****   * @file    user_diskio.c
   5:./FW/user_diskio.c ****   * @brief   This file includes a diskio driver skeleton to be completed by the user.
   6:./FW/user_diskio.c ****   ******************************************************************************
   7:./FW/user_diskio.c ****   * @attention
   8:./FW/user_diskio.c ****   *
   9:./FW/user_diskio.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:./FW/user_diskio.c ****   * All rights reserved.</center></h2>
  11:./FW/user_diskio.c ****   *
  12:./FW/user_diskio.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:./FW/user_diskio.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:./FW/user_diskio.c ****   * the License. You may obtain a copy of the License at:
  15:./FW/user_diskio.c ****   *                             www.st.com/SLA0044
  16:./FW/user_diskio.c ****   *
  17:./FW/user_diskio.c ****   ******************************************************************************
  18:./FW/user_diskio.c ****   */
  19:./FW/user_diskio.c **** /* USER CODE END Header */
  20:./FW/user_diskio.c **** 
  21:./FW/user_diskio.c **** #ifdef USE_OBSOLETE_USER_CODE_SECTION_0
  22:./FW/user_diskio.c **** /*
  23:./FW/user_diskio.c ****  * Warning: the user section 0 is no more in use (starting from CubeMx version 4.16.0)
  24:./FW/user_diskio.c ****  * To be suppressed in the future.
  25:./FW/user_diskio.c ****  * Kept to ensure backward compatibility with previous CubeMx versions when
  26:./FW/user_diskio.c ****  * migrating projects.
  27:./FW/user_diskio.c ****  * User code previously added there should be copied in the new user sections before
  28:./FW/user_diskio.c ****  * the section contents can be deleted.
  29:./FW/user_diskio.c ****  */
ARM GAS  C:\cygwin64\tmp\cc3rMfFb.s 			page 2


  30:./FW/user_diskio.c **** /* USER CODE BEGIN 0 */
  31:./FW/user_diskio.c **** /* USER CODE END 0 */
  32:./FW/user_diskio.c **** #endif
  33:./FW/user_diskio.c **** 
  34:./FW/user_diskio.c **** /* USER CODE BEGIN DECL */
  35:./FW/user_diskio.c **** 
  36:./FW/user_diskio.c **** /* Includes ------------------------------------------------------------------*/
  37:./FW/user_diskio.c **** #include <string.h>
  38:./FW/user_diskio.c **** #include "ff_gen_drv.h"
  39:./FW/user_diskio.c **** 
  40:./FW/user_diskio.c **** /* Private typedef -----------------------------------------------------------*/
  41:./FW/user_diskio.c **** /* Private define ------------------------------------------------------------*/
  42:./FW/user_diskio.c **** 
  43:./FW/user_diskio.c **** /* Private variables ---------------------------------------------------------*/
  44:./FW/user_diskio.c **** /* Disk status */
  45:./FW/user_diskio.c **** static volatile DSTATUS Stat = STA_NOINIT;
  46:./FW/user_diskio.c **** 
  47:./FW/user_diskio.c **** /* USER CODE END DECL */
  48:./FW/user_diskio.c **** 
  49:./FW/user_diskio.c **** /* Private function prototypes -----------------------------------------------*/
  50:./FW/user_diskio.c **** DSTATUS USER_initialize (BYTE pdrv);
  51:./FW/user_diskio.c **** DSTATUS USER_status (BYTE pdrv);
  52:./FW/user_diskio.c **** DRESULT USER_read (BYTE pdrv, BYTE *buff, DWORD sector, UINT count);
  53:./FW/user_diskio.c **** #if _USE_WRITE == 1
  54:./FW/user_diskio.c **** DRESULT USER_write (BYTE pdrv, const BYTE *buff, DWORD sector, UINT count);
  55:./FW/user_diskio.c **** #endif /* _USE_WRITE == 1 */
  56:./FW/user_diskio.c **** #if _USE_IOCTL == 1
  57:./FW/user_diskio.c **** DRESULT USER_ioctl (BYTE pdrv, BYTE cmd, void *buff);
  58:./FW/user_diskio.c **** #endif /* _USE_IOCTL == 1 */
  59:./FW/user_diskio.c **** 
  60:./FW/user_diskio.c **** Diskio_drvTypeDef  USER_Driver = {
  61:./FW/user_diskio.c ****     USER_initialize,
  62:./FW/user_diskio.c ****     USER_status,
  63:./FW/user_diskio.c ****     USER_read,
  64:./FW/user_diskio.c **** #if  _USE_WRITE
  65:./FW/user_diskio.c ****     USER_write,
  66:./FW/user_diskio.c **** #endif  /* _USE_WRITE == 1 */
  67:./FW/user_diskio.c **** #if  _USE_IOCTL == 1
  68:./FW/user_diskio.c ****     USER_ioctl,
  69:./FW/user_diskio.c **** #endif /* _USE_IOCTL == 1 */
  70:./FW/user_diskio.c **** };
  71:./FW/user_diskio.c **** 
  72:./FW/user_diskio.c **** /* Private functions ---------------------------------------------------------*/
  73:./FW/user_diskio.c **** 
  74:./FW/user_diskio.c **** /**
  75:./FW/user_diskio.c ****   * @brief  Initializes a Drive
  76:./FW/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
  77:./FW/user_diskio.c ****   * @retval DSTATUS: Operation status
  78:./FW/user_diskio.c ****   */
  79:./FW/user_diskio.c **** DSTATUS USER_initialize (
  80:./FW/user_diskio.c ****     BYTE pdrv           /* Physical drive nmuber to identify the drive */
  81:./FW/user_diskio.c **** ) {
  30              		.loc 1 81 3 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
ARM GAS  C:\cygwin64\tmp\cc3rMfFb.s 			page 3


  82:./FW/user_diskio.c ****     /* USER CODE BEGIN INIT */
  83:./FW/user_diskio.c ****     Stat = STA_NOINIT;
  35              		.loc 1 83 5 view .LVU1
  36              		.loc 1 83 10 is_stmt 0 view .LVU2
  37 0000 024B     		ldr	r3, .L2
  38 0002 0122     		movs	r2, #1
  39 0004 1A70     		strb	r2, [r3]
  84:./FW/user_diskio.c ****     return Stat;
  40              		.loc 1 84 5 is_stmt 1 view .LVU3
  41              		.loc 1 84 12 is_stmt 0 view .LVU4
  42 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  43              	.LVL1:
  85:./FW/user_diskio.c ****     /* USER CODE END INIT */
  86:./FW/user_diskio.c **** }
  44              		.loc 1 86 1 view .LVU5
  45 0008 7047     		bx	lr
  46              	.L3:
  47 000a 00BF     		.align	2
  48              	.L2:
  49 000c 00000000 		.word	.LANCHOR0
  50              		.cfi_endproc
  51              	.LFE939:
  53              		.section	.text.USER_status,"ax",%progbits
  54              		.align	1
  55              		.global	USER_status
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	USER_status:
  62              	.LVL2:
  63              	.LFB940:
  87:./FW/user_diskio.c **** 
  88:./FW/user_diskio.c **** /**
  89:./FW/user_diskio.c ****   * @brief  Gets Disk Status
  90:./FW/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
  91:./FW/user_diskio.c ****   * @retval DSTATUS: Operation status
  92:./FW/user_diskio.c ****   */
  93:./FW/user_diskio.c **** DSTATUS USER_status (
  94:./FW/user_diskio.c ****     BYTE pdrv       /* Physical drive number to identify the drive */
  95:./FW/user_diskio.c **** ) {
  64              		.loc 1 95 3 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  96:./FW/user_diskio.c ****     /* USER CODE BEGIN STATUS */
  97:./FW/user_diskio.c ****     Stat = STA_NOINIT;
  69              		.loc 1 97 5 view .LVU7
  70              		.loc 1 97 10 is_stmt 0 view .LVU8
  71 0000 024B     		ldr	r3, .L5
  72 0002 0122     		movs	r2, #1
  73 0004 1A70     		strb	r2, [r3]
  98:./FW/user_diskio.c ****     return Stat;
  74              		.loc 1 98 5 is_stmt 1 view .LVU9
  75              		.loc 1 98 12 is_stmt 0 view .LVU10
  76 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\cygwin64\tmp\cc3rMfFb.s 			page 4


  77              	.LVL3:
  99:./FW/user_diskio.c ****     /* USER CODE END STATUS */
 100:./FW/user_diskio.c **** }
  78              		.loc 1 100 1 view .LVU11
  79 0008 7047     		bx	lr
  80              	.L6:
  81 000a 00BF     		.align	2
  82              	.L5:
  83 000c 00000000 		.word	.LANCHOR0
  84              		.cfi_endproc
  85              	.LFE940:
  87              		.section	.text.USER_read,"ax",%progbits
  88              		.align	1
  89              		.global	USER_read
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	USER_read:
  96              	.LVL4:
  97              	.LFB941:
 101:./FW/user_diskio.c **** 
 102:./FW/user_diskio.c **** /**
 103:./FW/user_diskio.c ****   * @brief  Reads Sector(s)
 104:./FW/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 105:./FW/user_diskio.c ****   * @param  *buff: Data buffer to store read data
 106:./FW/user_diskio.c ****   * @param  sector: Sector address (LBA)
 107:./FW/user_diskio.c ****   * @param  count: Number of sectors to read (1..128)
 108:./FW/user_diskio.c ****   * @retval DRESULT: Operation result
 109:./FW/user_diskio.c ****   */
 110:./FW/user_diskio.c **** DRESULT USER_read (
 111:./FW/user_diskio.c ****     BYTE pdrv,      /* Physical drive nmuber to identify the drive */
 112:./FW/user_diskio.c ****     BYTE *buff,     /* Data buffer to store read data */
 113:./FW/user_diskio.c ****     DWORD sector,   /* Sector address in LBA */
 114:./FW/user_diskio.c ****     UINT count      /* Number of sectors to read */
 115:./FW/user_diskio.c **** ) {
  98              		.loc 1 115 3 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 116:./FW/user_diskio.c ****     /* USER CODE BEGIN READ */
 117:./FW/user_diskio.c ****     return RES_OK;
 103              		.loc 1 117 5 view .LVU13
 118:./FW/user_diskio.c ****     /* USER CODE END READ */
 119:./FW/user_diskio.c **** }
 104              		.loc 1 119 1 is_stmt 0 view .LVU14
 105 0000 0020     		movs	r0, #0
 106              	.LVL5:
 107              		.loc 1 119 1 view .LVU15
 108 0002 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE941:
 112              		.section	.text.USER_write,"ax",%progbits
 113              		.align	1
 114              		.global	USER_write
 115              		.syntax unified
ARM GAS  C:\cygwin64\tmp\cc3rMfFb.s 			page 5


 116              		.thumb
 117              		.thumb_func
 118              		.fpu fpv4-sp-d16
 120              	USER_write:
 121              	.LVL6:
 122              	.LFB942:
 120:./FW/user_diskio.c **** 
 121:./FW/user_diskio.c **** /**
 122:./FW/user_diskio.c ****   * @brief  Writes Sector(s)
 123:./FW/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 124:./FW/user_diskio.c ****   * @param  *buff: Data to be written
 125:./FW/user_diskio.c ****   * @param  sector: Sector address (LBA)
 126:./FW/user_diskio.c ****   * @param  count: Number of sectors to write (1..128)
 127:./FW/user_diskio.c ****   * @retval DRESULT: Operation result
 128:./FW/user_diskio.c ****   */
 129:./FW/user_diskio.c **** #if _USE_WRITE == 1
 130:./FW/user_diskio.c **** DRESULT USER_write (
 131:./FW/user_diskio.c ****     BYTE pdrv,          /* Physical drive nmuber to identify the drive */
 132:./FW/user_diskio.c ****     const BYTE *buff,   /* Data to be written */
 133:./FW/user_diskio.c ****     DWORD sector,       /* Sector address in LBA */
 134:./FW/user_diskio.c ****     UINT count          /* Number of sectors to write */
 135:./FW/user_diskio.c **** ) {
 123              		.loc 1 135 3 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 136:./FW/user_diskio.c ****     /* USER CODE BEGIN WRITE */
 137:./FW/user_diskio.c ****     /* USER CODE HERE */
 138:./FW/user_diskio.c ****     return RES_OK;
 128              		.loc 1 138 5 view .LVU17
 139:./FW/user_diskio.c ****     /* USER CODE END WRITE */
 140:./FW/user_diskio.c **** }
 129              		.loc 1 140 1 is_stmt 0 view .LVU18
 130 0000 0020     		movs	r0, #0
 131              	.LVL7:
 132              		.loc 1 140 1 view .LVU19
 133 0002 7047     		bx	lr
 134              		.cfi_endproc
 135              	.LFE942:
 137              		.section	.text.USER_ioctl,"ax",%progbits
 138              		.align	1
 139              		.global	USER_ioctl
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	USER_ioctl:
 146              	.LVL8:
 147              	.LFB943:
 141:./FW/user_diskio.c **** #endif /* _USE_WRITE == 1 */
 142:./FW/user_diskio.c **** 
 143:./FW/user_diskio.c **** /**
 144:./FW/user_diskio.c ****   * @brief  I/O control operation
 145:./FW/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 146:./FW/user_diskio.c ****   * @param  cmd: Control code
 147:./FW/user_diskio.c ****   * @param  *buff: Buffer to send/receive control data
ARM GAS  C:\cygwin64\tmp\cc3rMfFb.s 			page 6


 148:./FW/user_diskio.c ****   * @retval DRESULT: Operation result
 149:./FW/user_diskio.c ****   */
 150:./FW/user_diskio.c **** #if _USE_IOCTL == 1
 151:./FW/user_diskio.c **** DRESULT USER_ioctl (
 152:./FW/user_diskio.c ****     BYTE pdrv,      /* Physical drive nmuber (0..) */
 153:./FW/user_diskio.c ****     BYTE cmd,       /* Control code */
 154:./FW/user_diskio.c ****     void *buff      /* Buffer to send/receive control data */
 155:./FW/user_diskio.c **** ) {
 148              		.loc 1 155 3 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 156:./FW/user_diskio.c ****     /* USER CODE BEGIN IOCTL */
 157:./FW/user_diskio.c ****     DRESULT res = RES_ERROR;
 153              		.loc 1 157 5 view .LVU21
 158:./FW/user_diskio.c ****     return res;
 154              		.loc 1 158 5 view .LVU22
 159:./FW/user_diskio.c ****     /* USER CODE END IOCTL */
 160:./FW/user_diskio.c **** }
 155              		.loc 1 160 1 is_stmt 0 view .LVU23
 156 0000 0120     		movs	r0, #1
 157              	.LVL9:
 158              		.loc 1 160 1 view .LVU24
 159 0002 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE943:
 163              		.global	USER_Driver
 164              		.section	.data.Stat,"aw"
 165              		.set	.LANCHOR0,. + 0
 168              	Stat:
 169 0000 01       		.byte	1
 170              		.section	.data.USER_Driver,"aw"
 171              		.align	2
 174              	USER_Driver:
 175 0000 00000000 		.word	USER_initialize
 176 0004 00000000 		.word	USER_status
 177 0008 00000000 		.word	USER_read
 178 000c 00000000 		.word	USER_write
 179 0010 00000000 		.word	USER_ioctl
 180              		.text
 181              	.Letext0:
 182              		.file 2 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\machine\\_default_types.h"
 183              		.file 3 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\sys\\lock.h"
 184              		.file 4 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\sys\\_types.h"
 185              		.file 5 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 186              		.file 6 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\sys\\reent.h"
 187              		.file 7 "./FW/integer.h"
 188              		.file 8 "./FW/diskio.h"
 189              		.file 9 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\sys\\_stdint.h"
 190              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 191              		.file 11 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 192              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 193              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 194              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 195              		.file 15 "c:\\gnu_tools_arm_embedded\\9_2019_q4\\arm-none-eabi\\include\\stdlib.h"
 196              		.file 16 "./FW/ff_gen_drv.h"
ARM GAS  C:\cygwin64\tmp\cc3rMfFb.s 			page 7


 197              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h"
ARM GAS  C:\cygwin64\tmp\cc3rMfFb.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 user_diskio.c
C:\cygwin64\tmp\cc3rMfFb.s:18     .text.USER_initialize:00000000 $t
C:\cygwin64\tmp\cc3rMfFb.s:26     .text.USER_initialize:00000000 USER_initialize
C:\cygwin64\tmp\cc3rMfFb.s:49     .text.USER_initialize:0000000c $d
C:\cygwin64\tmp\cc3rMfFb.s:54     .text.USER_status:00000000 $t
C:\cygwin64\tmp\cc3rMfFb.s:61     .text.USER_status:00000000 USER_status
C:\cygwin64\tmp\cc3rMfFb.s:83     .text.USER_status:0000000c $d
C:\cygwin64\tmp\cc3rMfFb.s:88     .text.USER_read:00000000 $t
C:\cygwin64\tmp\cc3rMfFb.s:95     .text.USER_read:00000000 USER_read
C:\cygwin64\tmp\cc3rMfFb.s:113    .text.USER_write:00000000 $t
C:\cygwin64\tmp\cc3rMfFb.s:120    .text.USER_write:00000000 USER_write
C:\cygwin64\tmp\cc3rMfFb.s:138    .text.USER_ioctl:00000000 $t
C:\cygwin64\tmp\cc3rMfFb.s:145    .text.USER_ioctl:00000000 USER_ioctl
C:\cygwin64\tmp\cc3rMfFb.s:174    .data.USER_Driver:00000000 USER_Driver
C:\cygwin64\tmp\cc3rMfFb.s:168    .data.Stat:00000000 Stat
C:\cygwin64\tmp\cc3rMfFb.s:171    .data.USER_Driver:00000000 $d

NO UNDEFINED SYMBOLS
